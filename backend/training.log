2025-01-06 11:46:22,953 - INFO - Iniciando entrenamiento del modelo
2025-01-06 11:46:22,961 - INFO - Dataset cargado: (5110, 10)
2025-01-06 11:46:23,366 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:46:23,372 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:46:23,393 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:46:23,400 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:46:24,066 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 11:46:24,067 - INFO - 
Entrenando LDA...
2025-01-06 11:46:27,611 - INFO - LDA:
2025-01-06 11:46:27,611 - INFO - ROC AUC Score: 0.839 (±0.030)
2025-01-06 11:46:27,611 - INFO - 
Entrenando Random Forest...
2025-01-06 11:48:10,263 - INFO - Iniciando entrenamiento del modelo
2025-01-06 11:48:10,271 - INFO - Dataset cargado: (5110, 10)
2025-01-06 11:48:10,709 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:48:10,715 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:48:10,735 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:48:10,741 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 11:48:11,486 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 11:48:11,486 - INFO - 
Entrenando LDA...
2025-01-06 11:48:15,569 - INFO - LDA:
2025-01-06 11:48:15,569 - INFO - ROC AUC Score: 0.838 (±0.030)
2025-01-06 11:48:15,569 - INFO - 
Entrenando Random Forest...
2025-01-06 11:48:46,294 - INFO - Random Forest:
2025-01-06 11:48:46,294 - INFO - ROC AUC Score: 0.791 (±0.024)
2025-01-06 11:48:46,294 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 11:48:59,320 - INFO - Gradient Boosting:
2025-01-06 11:48:59,321 - INFO - ROC AUC Score: 0.816 (±0.030)
2025-01-06 11:48:59,473 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 11:48:59,474 - INFO - 
Mejor modelo: LDA
2025-01-06 11:48:59,474 - INFO - ROC AUC Score: 0.838 (±0.030)
2025-01-06 11:48:59,606 - INFO - 
Importancia de características:
2025-01-06 11:48:59,606 - INFO - Edad: 53.98%
2025-01-06 11:48:59,606 - INFO - Tipo de Trabajo: 25.26%
2025-01-06 11:48:59,606 - INFO - Nivel de Glucosa: 5.27%
2025-01-06 11:48:59,607 - INFO - Tabaquismo: 3.86%
2025-01-06 11:48:59,607 - INFO - Hipertensión: 3.76%
2025-01-06 11:48:59,607 - INFO - Estado Civil: 3.69%
2025-01-06 11:48:59,607 - INFO - Residencia: 1.78%
2025-01-06 11:48:59,607 - INFO - IMC: 1.34%
2025-01-06 11:48:59,607 - INFO - Enf. Cardíacas: 1.06%
2025-01-06 11:48:59,912 - INFO - Análisis del modelo completado exitosamente
2025-01-06 11:49:00,080 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 11:49:00,080 - INFO - 
Entrenamiento completado en 0:00:49.816395
2025-01-06 12:22:19,632 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:22:19,644 - INFO - Dataset cargado: (5110, 10)
2025-01-06 12:22:20,133 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:22:20,140 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:22:20,165 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:22:20,174 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:22:21,016 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 12:22:21,016 - INFO - 
Entrenando LDA...
2025-01-06 12:22:25,999 - INFO - LDA:
2025-01-06 12:22:26,000 - INFO - ROC AUC Score: 0.838 (±0.030)
2025-01-06 12:22:26,000 - INFO - 
Entrenando Random Forest...
2025-01-06 12:22:58,928 - INFO - Random Forest:
2025-01-06 12:22:58,929 - INFO - ROC AUC Score: 0.791 (±0.023)
2025-01-06 12:22:58,929 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 12:23:13,044 - INFO - Gradient Boosting:
2025-01-06 12:23:13,044 - INFO - ROC AUC Score: 0.815 (±0.028)
2025-01-06 12:23:13,190 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 12:23:13,190 - INFO - 
Mejor modelo: LDA
2025-01-06 12:23:13,191 - INFO - ROC AUC Score: 0.838 (±0.030)
2025-01-06 12:23:13,333 - INFO - 
Importancia de características:
2025-01-06 12:23:13,334 - INFO - Edad: 53.72%
2025-01-06 12:23:13,334 - INFO - Tipo de Trabajo: 24.53%
2025-01-06 12:23:13,334 - INFO - Nivel de Glucosa: 5.55%
2025-01-06 12:23:13,334 - INFO - Tabaquismo: 3.82%
2025-01-06 12:23:13,334 - INFO - Hipertensión: 3.73%
2025-01-06 12:23:13,334 - INFO - Estado Civil: 3.39%
2025-01-06 12:23:13,335 - INFO - Residencia: 2.10%
2025-01-06 12:23:13,335 - INFO - IMC: 1.81%
2025-01-06 12:23:13,335 - INFO - Enf. Cardíacas: 1.35%
2025-01-06 12:23:13,640 - INFO - Análisis del modelo completado exitosamente
2025-01-06 12:23:13,811 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 12:23:13,811 - INFO - 
Entrenamiento completado en 0:00:54.178048
2025-01-06 12:34:26,115 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:34:26,131 - INFO - Dataset cargado y preprocesado: (5110, 24)
2025-01-06 12:34:26,537 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:34:26,543 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:34:26,560 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:34:26,565 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:34:27,226 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 12:34:27,234 - INFO - 
Entrenando LDA...
2025-01-06 12:34:27,235 - ERROR - Error evaluando LDA: name 'IMBPipeline' is not defined
2025-01-06 12:34:27,235 - INFO - 
Entrenando Random Forest...
2025-01-06 12:34:27,235 - ERROR - Error evaluando Random Forest: name 'IMBPipeline' is not defined
2025-01-06 12:34:27,235 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 12:34:27,235 - ERROR - Error evaluando Gradient Boosting: name 'IMBPipeline' is not defined
2025-01-06 12:34:27,378 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 12:34:27,379 - ERROR - Error durante el entrenamiento: No hay resultados de modelos para comparar
2025-01-06 12:37:03,545 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:37:03,561 - INFO - Dataset cargado y preprocesado: (5110, 24)
2025-01-06 12:37:03,739 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:03,746 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:03,764 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:03,771 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:03,793 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:03,799 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:03,820 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:03,826 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:04,138 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:04,143 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:04,218 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:04,225 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:04,304 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:04,309 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:37:04,887 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 12:37:04,893 - INFO - 
Entrenando LDA...
2025-01-06 12:37:04,894 - ERROR - Error evaluando LDA: OneHotEncoder.__init__() got an unexpected keyword argument 'sparse'
2025-01-06 12:37:04,894 - INFO - 
Entrenando Random Forest...
2025-01-06 12:37:04,894 - ERROR - Error evaluando Random Forest: OneHotEncoder.__init__() got an unexpected keyword argument 'sparse'
2025-01-06 12:37:04,895 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 12:37:04,895 - ERROR - Error evaluando Gradient Boosting: OneHotEncoder.__init__() got an unexpected keyword argument 'sparse'
2025-01-06 12:37:05,035 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 12:37:05,036 - ERROR - Error durante el entrenamiento: No hay resultados de modelos para comparar
2025-01-06 12:38:13,504 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:38:13,520 - INFO - Dataset cargado y preprocesado: (5110, 24)
2025-01-06 12:38:13,693 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:13,699 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:13,718 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:13,723 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:13,742 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:13,747 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:13,767 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:13,772 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:14,070 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:14,075 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:14,151 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:14,156 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:14,229 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:14,234 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:38:14,774 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 12:38:14,778 - INFO - 
Entrenando LDA...
2025-01-06 12:38:19,264 - INFO - 
Mejores parámetros para LDA:
2025-01-06 12:38:19,264 - INFO - {'t__num__power__method': 'yeo-johnson', 'smote__sampling_strategy': 'auto', 'smote__k_neighbors': 7, 'model__solver': 'lsqr', 'model__shrinkage': None}
2025-01-06 12:38:19,264 - INFO - Mejor score: 0.837
2025-01-06 12:38:19,377 - INFO - LDA - Métricas de validación cruzada:
2025-01-06 12:38:19,377 - INFO - accuracy: 0.733 (±0.021)
2025-01-06 12:38:19,378 - INFO - precision: 0.133 (±0.012)
2025-01-06 12:38:19,378 - INFO - recall: 0.804 (±0.044)
2025-01-06 12:38:19,378 - INFO - f1: 0.228 (±0.019)
2025-01-06 12:38:19,378 - INFO - roc_auc: 0.833 (±0.015)
2025-01-06 12:38:19,379 - INFO - 
LDA - Métricas en conjunto de prueba:
2025-01-06 12:38:19,379 - INFO - accuracy: 0.740
2025-01-06 12:38:19,379 - INFO - precision: 0.138
2025-01-06 12:38:19,379 - INFO - recall: 0.820
2025-01-06 12:38:19,379 - INFO - f1: 0.236
2025-01-06 12:38:19,379 - INFO - roc_auc: 0.847
2025-01-06 12:38:19,379 - INFO - 
Entrenando Random Forest...
2025-01-06 12:40:05,980 - INFO - 
Mejores parámetros para Random Forest:
2025-01-06 12:40:05,980 - INFO - {'smote__sampling_strategy': 0.5, 'smote__k_neighbors': 3, 'model__n_estimators': 1200, 'model__min_samples_split': 7, 'model__max_samples': 0.7, 'model__max_features': 'sqrt', 'model__max_depth': 15, 'model__criterion': 'gini', 'model__class_weight': 'balanced'}
2025-01-06 12:40:05,981 - INFO - Mejor score: 0.819
2025-01-06 12:40:10,217 - INFO - Random Forest - Métricas de validación cruzada:
2025-01-06 12:40:10,218 - INFO - accuracy: 0.913 (±0.012)
2025-01-06 12:40:10,218 - INFO - precision: 0.149 (±0.046)
2025-01-06 12:40:10,218 - INFO - recall: 0.171 (±0.066)
2025-01-06 12:40:10,218 - INFO - f1: 0.157 (±0.057)
2025-01-06 12:40:10,219 - INFO - roc_auc: 0.823 (±0.018)
2025-01-06 12:40:10,219 - INFO - 
Random Forest - Métricas en conjunto de prueba:
2025-01-06 12:40:10,219 - INFO - accuracy: 0.923
2025-01-06 12:40:10,219 - INFO - precision: 0.226
2025-01-06 12:40:10,219 - INFO - recall: 0.240
2025-01-06 12:40:10,219 - INFO - f1: 0.233
2025-01-06 12:40:10,219 - INFO - roc_auc: 0.807
2025-01-06 12:40:10,219 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 12:40:33,033 - INFO - 
Mejores parámetros para Gradient Boosting:
2025-01-06 12:40:33,033 - INFO - {'smote__sampling_strategy': 0.5, 'smote__k_neighbors': 3, 'model__validation_fraction': 0.1, 'model__subsample': 0.7, 'model__n_estimators': 300, 'model__min_samples_split': 10, 'model__min_samples_leaf': 3, 'model__max_depth': 6, 'model__learning_rate': 0.01}
2025-01-06 12:40:33,034 - INFO - Mejor score: 0.824
2025-01-06 12:40:34,546 - INFO - Gradient Boosting - Métricas de validación cruzada:
2025-01-06 12:40:34,547 - INFO - accuracy: 0.922 (±0.011)
2025-01-06 12:40:34,547 - INFO - precision: 0.145 (±0.043)
2025-01-06 12:40:34,547 - INFO - recall: 0.121 (±0.041)
2025-01-06 12:40:34,547 - INFO - f1: 0.130 (±0.042)
2025-01-06 12:40:34,548 - INFO - roc_auc: 0.816 (±0.017)
2025-01-06 12:40:34,548 - INFO - 
Gradient Boosting - Métricas en conjunto de prueba:
2025-01-06 12:40:34,548 - INFO - accuracy: 0.923
2025-01-06 12:40:34,548 - INFO - precision: 0.204
2025-01-06 12:40:34,548 - INFO - recall: 0.200
2025-01-06 12:40:34,548 - INFO - f1: 0.202
2025-01-06 12:40:34,549 - INFO - roc_auc: 0.821
2025-01-06 12:40:34,685 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 12:40:34,686 - INFO - 
Mejor modelo: LDA
2025-01-06 12:40:34,686 - INFO - Métricas en conjunto de prueba:
2025-01-06 12:40:34,686 - INFO - accuracy: 0.740
2025-01-06 12:40:34,686 - INFO - precision: 0.138
2025-01-06 12:40:34,686 - INFO - recall: 0.820
2025-01-06 12:40:34,686 - INFO - f1: 0.236
2025-01-06 12:40:34,687 - INFO - roc_auc: 0.847
2025-01-06 12:40:34,687 - INFO - 
Importancia de características:
2025-01-06 12:40:34,687 - INFO - age: 49.12%
2025-01-06 12:40:34,687 - INFO - age_squared: 47.73%
2025-01-06 12:40:34,687 - INFO - very_elderly: 0.57%
2025-01-06 12:40:34,687 - INFO - elderly: 0.45%
2025-01-06 12:40:34,688 - INFO - work_type: 0.27%
2025-01-06 12:40:34,688 - INFO - risk_score: 0.23%
2025-01-06 12:40:34,688 - INFO - Residence_type: 0.22%
2025-01-06 12:40:34,688 - INFO - age_pressure: 0.17%
2025-01-06 12:40:34,688 - INFO - glucose_pressure: 0.16%
2025-01-06 12:40:34,688 - INFO - glucose_heart: 0.15%
2025-01-06 12:40:34,688 - INFO - avg_glucose_level: 0.13%
2025-01-06 12:40:34,688 - INFO - bmi: 0.12%
2025-01-06 12:40:34,689 - INFO - heart_disease: 0.08%
2025-01-06 12:40:34,689 - INFO - ever_married: 0.08%
2025-01-06 12:40:34,689 - INFO - severe_obesity: 0.08%
2025-01-06 12:40:34,689 - INFO - age_heart: 0.08%
2025-01-06 12:40:34,689 - INFO - smoking_status: 0.08%
2025-01-06 12:40:34,689 - INFO - obesity: 0.07%
2025-01-06 12:40:34,689 - INFO - gender: 0.05%
2025-01-06 12:40:34,689 - INFO - hypertension: 0.05%
2025-01-06 12:40:34,690 - INFO - very_high_glucose: 0.04%
2025-01-06 12:40:34,690 - INFO - high_glucose: 0.04%
2025-01-06 12:40:34,690 - INFO - age_glucose: 0.03%
2025-01-06 12:40:34,987 - INFO - Análisis del modelo completado exitosamente
2025-01-06 12:40:35,225 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 12:40:35,225 - INFO - 
Entrenamiento completado en 0:02:21.720642
2025-01-06 12:43:48,091 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:43:48,102 - INFO - Dataset cargado y preprocesado: (5110, 12)
2025-01-06 12:43:48,278 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:43:48,284 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:43:48,305 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:43:48,310 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:43:48,328 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:43:48,333 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:43:48,346 - ERROR - Error generando visualizaciones EDA: Could not interpret value `risk_score` for `y`. An entry with this name does not appear in `data`.
2025-01-06 12:43:48,350 - INFO - 
Entrenando Random Forest...
2025-01-06 12:44:55,377 - INFO - 
Mejores parámetros para Random Forest:
2025-01-06 12:44:55,377 - INFO - {'smote__k_neighbors': 3, 'model__n_estimators': 500, 'model__min_samples_split': 5, 'model__max_features': 'log2', 'model__max_depth': None}
2025-01-06 12:44:55,378 - INFO - Mejor score: 0.826
2025-01-06 12:44:57,964 - INFO - Random Forest - Métricas de validación cruzada:
2025-01-06 12:44:57,964 - INFO - accuracy: 0.916 (±0.010)
2025-01-06 12:44:57,964 - INFO - precision: 0.163 (±0.021)
2025-01-06 12:44:57,965 - INFO - recall: 0.176 (±0.041)
2025-01-06 12:44:57,965 - INFO - f1: 0.167 (±0.025)
2025-01-06 12:44:57,965 - INFO - roc_auc: 0.810 (±0.028)
2025-01-06 12:44:57,965 - INFO - 
Random Forest - Métricas en conjunto de prueba:
2025-01-06 12:44:57,965 - INFO - accuracy: 0.916
2025-01-06 12:44:57,965 - INFO - precision: 0.140
2025-01-06 12:44:57,966 - INFO - recall: 0.140
2025-01-06 12:44:57,966 - INFO - f1: 0.140
2025-01-06 12:44:57,966 - INFO - roc_auc: 0.788
2025-01-06 12:44:57,966 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 12:45:17,909 - INFO - 
Mejores parámetros para Gradient Boosting:
2025-01-06 12:45:17,910 - INFO - {'smote__k_neighbors': 3, 'model__n_estimators': 100, 'model__min_samples_split': 2, 'model__max_depth': 3, 'model__learning_rate': 0.05}
2025-01-06 12:45:17,910 - INFO - Mejor score: 0.826
2025-01-06 12:45:18,771 - INFO - Gradient Boosting - Métricas de validación cruzada:
2025-01-06 12:45:18,772 - INFO - accuracy: 0.788 (±0.022)
2025-01-06 12:45:18,772 - INFO - precision: 0.144 (±0.013)
2025-01-06 12:45:18,772 - INFO - recall: 0.674 (±0.073)
2025-01-06 12:45:18,772 - INFO - f1: 0.237 (±0.020)
2025-01-06 12:45:18,773 - INFO - roc_auc: 0.819 (±0.022)
2025-01-06 12:45:18,773 - INFO - 
Gradient Boosting - Métricas en conjunto de prueba:
2025-01-06 12:45:18,773 - INFO - accuracy: 0.779
2025-01-06 12:45:18,773 - INFO - precision: 0.148
2025-01-06 12:45:18,773 - INFO - recall: 0.740
2025-01-06 12:45:18,773 - INFO - f1: 0.247
2025-01-06 12:45:18,773 - INFO - roc_auc: 0.828
2025-01-06 12:45:18,911 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 12:45:18,912 - INFO - 
Mejor modelo: Gradient Boosting
2025-01-06 12:45:18,912 - INFO - Métricas en conjunto de prueba:
2025-01-06 12:45:18,912 - INFO - accuracy: 0.779
2025-01-06 12:45:18,912 - INFO - precision: 0.148
2025-01-06 12:45:18,912 - INFO - recall: 0.740
2025-01-06 12:45:18,912 - INFO - f1: 0.247
2025-01-06 12:45:18,912 - INFO - roc_auc: 0.828
2025-01-06 12:45:18,914 - INFO - 
Importancia de características:
2025-01-06 12:45:18,914 - INFO - age_squared: 74.51%
2025-01-06 12:45:18,914 - INFO - work_type: 5.60%
2025-01-06 12:45:18,914 - INFO - bmi: 5.52%
2025-01-06 12:45:18,914 - INFO - age: 4.42%
2025-01-06 12:45:18,914 - INFO - avg_glucose_level: 4.11%
2025-01-06 12:45:18,914 - INFO - Residence_type: 2.32%
2025-01-06 12:45:18,914 - INFO - gender: 1.58%
2025-01-06 12:45:18,915 - INFO - hypertension: 0.65%
2025-01-06 12:45:18,915 - INFO - smoking_status: 0.60%
2025-01-06 12:45:18,915 - INFO - glucose_risk: 0.42%
2025-01-06 12:45:18,915 - INFO - heart_disease: 0.27%
2025-01-06 12:45:18,915 - INFO - ever_married: 0.00%
2025-01-06 12:45:19,202 - INFO - Análisis del modelo completado exitosamente
2025-01-06 12:45:19,387 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 12:45:19,387 - INFO - 
Entrenamiento completado en 0:01:31.295466
2025-01-06 12:48:23,773 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:48:23,788 - INFO - Dataset cargado: (5110, 13)
2025-01-06 12:48:24,146 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:48:24,152 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:48:24,170 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:48:24,176 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:48:24,868 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 12:48:24,871 - INFO - 
Entrenando LDA...
2025-01-06 12:48:24,871 - ERROR - Error durante el entrenamiento: OneHotEncoder.__init__() got an unexpected keyword argument 'sparse'
2025-01-06 12:49:06,617 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:49:06,632 - INFO - Dataset cargado: (5110, 13)
2025-01-06 12:49:07,034 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:49:07,040 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:49:07,063 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:49:07,069 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:49:07,801 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 12:49:07,801 - INFO - 
Entrenando LDA...
2025-01-06 12:49:13,538 - INFO - LDA:
2025-01-06 12:49:13,539 - INFO - ROC AUC Score: 0.837 (±0.030)
2025-01-06 12:49:13,539 - INFO - 
Entrenando Random Forest...
2025-01-06 12:49:43,677 - INFO - Random Forest:
2025-01-06 12:49:43,678 - INFO - ROC AUC Score: 0.811 (±0.031)
2025-01-06 12:49:43,678 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 12:50:00,485 - INFO - Gradient Boosting:
2025-01-06 12:50:00,485 - INFO - ROC AUC Score: 0.820 (±0.031)
2025-01-06 12:50:00,639 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 12:50:00,639 - INFO - 
Mejor modelo: LDA
2025-01-06 12:50:00,639 - INFO - ROC AUC Score: 0.837 (±0.030)
2025-01-06 12:50:00,934 - WARNING - Desajuste en características: 0 nombres vs 24 importancias
2025-01-06 12:50:01,244 - INFO - Análisis del modelo completado exitosamente
2025-01-06 12:50:01,248 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 12:50:01,248 - INFO - 
Entrenamiento completado en 0:00:54.630919
2025-01-06 12:53:25,560 - INFO - Iniciando entrenamiento del modelo
2025-01-06 12:53:25,574 - INFO - Dataset cargado: (5110, 13)
2025-01-06 12:53:25,575 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 12:53:25,576 - INFO - 
Distribución de clases:
2025-01-06 12:53:25,576 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 12:53:25,576 - INFO - Stroke: 249 (4.87%)
2025-01-06 12:53:25,576 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 12:53:25,578 - INFO - 
Valores faltantes por columna:
2025-01-06 12:53:25,578 - INFO - bmi: 201 (3.93%)
2025-01-06 12:53:25,578 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 12:53:25,579 - INFO - 
age:
2025-01-06 12:53:25,579 - INFO -   Media: 43.23
2025-01-06 12:53:25,579 - INFO -   Mediana: 45.00
2025-01-06 12:53:25,579 - INFO -   Std: 22.61
2025-01-06 12:53:25,579 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 12:53:25,580 - INFO - 
avg_glucose_level:
2025-01-06 12:53:25,580 - INFO -   Media: 101.00
2025-01-06 12:53:25,580 - INFO -   Mediana: 91.88
2025-01-06 12:53:25,580 - INFO -   Std: 33.21
2025-01-06 12:53:25,580 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 12:53:25,581 - INFO - 
bmi:
2025-01-06 12:53:25,581 - INFO -   Media: 28.74
2025-01-06 12:53:25,581 - INFO -   Mediana: 28.10
2025-01-06 12:53:25,582 - INFO -   Std: 7.34
2025-01-06 12:53:25,582 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 12:53:25,582 - INFO - 
=== Información de Outliers ===
2025-01-06 12:53:26,012 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:53:26,018 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:53:26,037 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:53:26,050 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 12:53:26,732 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 12:53:26,732 - INFO - 
Entrenando LDA...
2025-01-06 12:53:38,131 - INFO - 
Métricas de validación cruzada:
2025-01-06 12:53:38,131 - INFO - ROC AUC: 0.837 (±0.030)
2025-01-06 12:53:38,132 - INFO - Precision: 0.126 (±0.013)
2025-01-06 12:53:38,132 - INFO - Recall: 0.827 (±0.072)
2025-01-06 12:53:38,132 - INFO - F1: 0.219 (±0.021)
2025-01-06 12:53:38,132 - INFO - LDA:
2025-01-06 12:53:38,132 - INFO - ROC AUC Score: 0.837 (±0.030)
2025-01-06 12:53:38,132 - INFO - 
Entrenando Random Forest...
2025-01-06 12:55:43,636 - INFO - 
Métricas de validación cruzada:
2025-01-06 12:55:43,637 - INFO - ROC AUC: 0.811 (±0.031)
2025-01-06 12:55:43,637 - INFO - Precision: 0.176 (±0.051)
2025-01-06 12:55:43,637 - INFO - Recall: 0.301 (±0.095)
2025-01-06 12:55:43,637 - INFO - F1: 0.221 (±0.064)
2025-01-06 12:55:43,638 - INFO - Random Forest:
2025-01-06 12:55:43,638 - INFO - ROC AUC Score: 0.811 (±0.031)
2025-01-06 12:55:43,638 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 12:56:58,290 - INFO - 
Métricas de validación cruzada:
2025-01-06 12:56:58,290 - INFO - ROC AUC: 0.820 (±0.031)
2025-01-06 12:56:58,291 - INFO - Precision: 0.161 (±0.029)
2025-01-06 12:56:58,291 - INFO - Recall: 0.573 (±0.103)
2025-01-06 12:56:58,291 - INFO - F1: 0.251 (±0.044)
2025-01-06 12:56:58,291 - INFO - Gradient Boosting:
2025-01-06 12:56:58,291 - INFO - ROC AUC Score: 0.820 (±0.031)
2025-01-06 12:56:58,457 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 12:56:58,457 - INFO - 
Mejor modelo: LDA
2025-01-06 12:56:58,458 - INFO - ROC AUC Score: 0.837 (±0.030)
2025-01-06 12:56:58,764 - WARNING - Desajuste en características: 0 nombres vs 24 importancias
2025-01-06 12:56:58,764 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 12:56:58,784 - INFO - 
Informe de Clasificación:
2025-01-06 12:56:58,789 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.69      0.81       972
           1       0.12      0.84      0.21        50

    accuracy                           0.70      1022
   macro avg       0.56      0.76      0.51      1022
weighted avg       0.95      0.70      0.78      1022

2025-01-06 12:56:58,791 - INFO - 
Matriz de Confusión:
2025-01-06 12:56:58,791 - INFO - 
[[TN=670 FP=302]
2025-01-06 12:56:58,791 - INFO -  [FN=8 TP=42]]
2025-01-06 12:56:58,791 - INFO - 
Métricas Detalladas:
2025-01-06 12:56:58,791 - INFO - Precision: 0.122
2025-01-06 12:56:58,792 - INFO - Recall (Sensibilidad): 0.840
2025-01-06 12:56:58,792 - INFO - Especificidad: 0.689
2025-01-06 12:56:58,793 - INFO - Average Precision Score: 0.284
2025-01-06 12:56:58,793 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 12:56:58,797 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 12:56:58,797 - INFO - 
Entrenamiento completado en 0:03:33.236708
2025-01-06 13:08:47,993 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:08:48,010 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:08:48,011 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:08:48,011 - INFO - 
Distribución de clases:
2025-01-06 13:08:48,011 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:08:48,012 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:08:48,012 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:08:48,013 - INFO - 
Valores faltantes por columna:
2025-01-06 13:08:48,013 - INFO - bmi: 201 (3.93%)
2025-01-06 13:08:48,013 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:08:48,014 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:08:48,014 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:08:48,015 - INFO - 
age:
2025-01-06 13:08:48,015 - INFO -   Media: 43.23
2025-01-06 13:08:48,015 - INFO -   Mediana: 45.00
2025-01-06 13:08:48,015 - INFO -   Std: 22.61
2025-01-06 13:08:48,015 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:08:48,017 - INFO - 
avg_glucose_level:
2025-01-06 13:08:48,017 - INFO -   Media: 101.00
2025-01-06 13:08:48,017 - INFO -   Mediana: 91.88
2025-01-06 13:08:48,017 - INFO -   Std: 33.21
2025-01-06 13:08:48,017 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:08:48,018 - INFO - 
bmi:
2025-01-06 13:08:48,019 - INFO -   Media: 28.74
2025-01-06 13:08:48,019 - INFO -   Mediana: 28.10
2025-01-06 13:08:48,019 - INFO -   Std: 7.34
2025-01-06 13:08:48,019 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:08:48,019 - INFO - 
=== Información de Outliers ===
2025-01-06 13:08:48,405 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:08:48,410 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:08:48,430 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:08:48,436 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:08:49,117 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:08:49,117 - INFO - 
Entrenando LDA...
2025-01-06 13:09:03,085 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:09:03,086 - INFO - ROC AUC: 0.848 (±0.026)
2025-01-06 13:09:03,086 - INFO - Precision: 0.133 (±0.013)
2025-01-06 13:09:03,086 - INFO - Recall: 0.811 (±0.076)
2025-01-06 13:09:03,086 - INFO - F1: 0.228 (±0.021)
2025-01-06 13:09:03,087 - INFO - LDA:
2025-01-06 13:09:03,087 - INFO - ROC AUC Score: 0.848 (±0.026)
2025-01-06 13:09:03,087 - INFO - 
Entrenando Random Forest...
2025-01-06 13:13:10,321 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:13:10,336 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:13:10,336 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:13:10,337 - INFO - 
Distribución de clases:
2025-01-06 13:13:10,337 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:13:10,337 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:13:10,337 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:13:10,338 - INFO - 
Valores faltantes por columna:
2025-01-06 13:13:10,338 - INFO - bmi: 201 (3.93%)
2025-01-06 13:13:10,339 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:13:10,339 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:13:10,339 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:13:10,340 - INFO - 
age:
2025-01-06 13:13:10,340 - INFO -   Media: 43.23
2025-01-06 13:13:10,340 - INFO -   Mediana: 45.00
2025-01-06 13:13:10,341 - INFO -   Std: 22.61
2025-01-06 13:13:10,341 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:13:10,342 - INFO - 
avg_glucose_level:
2025-01-06 13:13:10,342 - INFO -   Media: 101.00
2025-01-06 13:13:10,342 - INFO -   Mediana: 91.88
2025-01-06 13:13:10,342 - INFO -   Std: 33.21
2025-01-06 13:13:10,342 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:13:10,343 - INFO - 
bmi:
2025-01-06 13:13:10,343 - INFO -   Media: 28.74
2025-01-06 13:13:10,343 - INFO -   Mediana: 28.10
2025-01-06 13:13:10,344 - INFO -   Std: 7.34
2025-01-06 13:13:10,344 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:13:10,344 - INFO - 
=== Información de Outliers ===
2025-01-06 13:13:10,539 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:13:10,544 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:13:10,564 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:13:10,571 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:13:11,189 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:13:11,190 - INFO - 
Entrenando LDA...
2025-01-06 13:13:23,330 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:13:23,331 - INFO - ROC AUC: 0.847 (±0.025)
2025-01-06 13:13:23,331 - INFO - Precision: 0.132 (±0.012)
2025-01-06 13:13:23,331 - INFO - Recall: 0.817 (±0.074)
2025-01-06 13:13:23,332 - INFO - F1: 0.226 (±0.020)
2025-01-06 13:13:23,332 - INFO - LDA:
2025-01-06 13:13:23,332 - INFO - ROC AUC Score: 0.847 (±0.025)
2025-01-06 13:13:23,332 - INFO - 
Entrenando Random Forest...
2025-01-06 13:14:10,661 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:14:10,661 - INFO - ROC AUC: 0.840 (±0.027)
2025-01-06 13:14:10,662 - INFO - Precision: 0.189 (±0.032)
2025-01-06 13:14:10,662 - INFO - Recall: 0.541 (±0.087)
2025-01-06 13:14:10,662 - INFO - F1: 0.279 (±0.045)
2025-01-06 13:14:10,662 - INFO - Random Forest:
2025-01-06 13:14:10,662 - INFO - ROC AUC Score: 0.840 (±0.027)
2025-01-06 13:14:10,663 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 13:14:10,664 - ERROR - Error durante el entrenamiento: Invalid parameter 'class_weight' for estimator GradientBoostingClassifier(learning_rate=0.05, loss='exponential', max_depth=5,
                           min_samples_leaf=8, min_samples_split=10,
                           n_estimators=500, n_iter_no_change=10,
                           random_state=42, subsample=0.8,
                           validation_fraction=0.2). Valid parameters are: ['ccp_alpha', 'criterion', 'init', 'learning_rate', 'loss', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_iter_no_change', 'random_state', 'subsample', 'tol', 'validation_fraction', 'verbose', 'warm_start'].
2025-01-06 13:21:29,512 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:21:29,528 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:21:29,528 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:21:29,529 - INFO - 
Distribución de clases:
2025-01-06 13:21:29,529 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:21:29,529 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:21:29,529 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:21:29,531 - INFO - 
Valores faltantes por columna:
2025-01-06 13:21:29,531 - INFO - bmi: 201 (3.93%)
2025-01-06 13:21:29,531 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:21:29,531 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:21:29,531 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:21:29,532 - INFO - 
age:
2025-01-06 13:21:29,533 - INFO -   Media: 43.23
2025-01-06 13:21:29,533 - INFO -   Mediana: 45.00
2025-01-06 13:21:29,533 - INFO -   Std: 22.61
2025-01-06 13:21:29,533 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:21:29,534 - INFO - 
avg_glucose_level:
2025-01-06 13:21:29,535 - INFO -   Media: 101.00
2025-01-06 13:21:29,535 - INFO -   Mediana: 91.88
2025-01-06 13:21:29,535 - INFO -   Std: 33.21
2025-01-06 13:21:29,535 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:21:29,536 - INFO - 
bmi:
2025-01-06 13:21:29,537 - INFO -   Media: 28.74
2025-01-06 13:21:29,537 - INFO -   Mediana: 28.10
2025-01-06 13:21:29,537 - INFO -   Std: 7.34
2025-01-06 13:21:29,537 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:21:29,537 - INFO - 
=== Información de Outliers ===
2025-01-06 13:21:29,779 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:21:29,785 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:21:29,807 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:21:29,813 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:21:30,459 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:21:30,459 - INFO - 
Entrenando LDA...
2025-01-06 13:22:16,040 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:22:16,041 - INFO - ROC AUC: 0.813 (±0.031)
2025-01-06 13:22:16,041 - INFO - Precision: 0.136 (±0.018)
2025-01-06 13:22:16,041 - INFO - Recall: 0.655 (±0.099)
2025-01-06 13:22:16,041 - INFO - F1: 0.226 (±0.030)
2025-01-06 13:22:16,042 - INFO - LDA:
2025-01-06 13:22:16,042 - INFO - ROC AUC Score: 0.813 (±0.031)
2025-01-06 13:22:16,042 - INFO - 
Entrenando Random Forest...
2025-01-06 13:26:05,879 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:26:05,898 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:26:05,899 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:26:05,899 - INFO - 
Distribución de clases:
2025-01-06 13:26:05,899 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:26:05,900 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:26:05,900 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:26:05,901 - INFO - 
Valores faltantes por columna:
2025-01-06 13:26:05,901 - INFO - bmi: 201 (3.93%)
2025-01-06 13:26:05,901 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:26:05,902 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:26:05,902 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:26:05,904 - INFO - 
age:
2025-01-06 13:26:05,904 - INFO -   Media: 43.23
2025-01-06 13:26:05,904 - INFO -   Mediana: 45.00
2025-01-06 13:26:05,904 - INFO -   Std: 22.61
2025-01-06 13:26:05,905 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:26:05,906 - INFO - 
avg_glucose_level:
2025-01-06 13:26:05,907 - INFO -   Media: 101.00
2025-01-06 13:26:05,907 - INFO -   Mediana: 91.88
2025-01-06 13:26:05,907 - INFO -   Std: 33.21
2025-01-06 13:26:05,907 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:26:05,909 - INFO - 
bmi:
2025-01-06 13:26:05,909 - INFO -   Media: 28.74
2025-01-06 13:26:05,909 - INFO -   Mediana: 28.10
2025-01-06 13:26:05,909 - INFO -   Std: 7.34
2025-01-06 13:26:05,909 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:26:05,910 - INFO - 
=== Información de Outliers ===
2025-01-06 13:26:06,188 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:26:06,195 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:26:06,218 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:26:06,225 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:26:06,938 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:26:06,938 - INFO - 
Entrenando LDA...
2025-01-06 13:26:16,210 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:26:16,211 - INFO - ROC AUC: 0.847 (±0.017)
2025-01-06 13:26:16,211 - INFO - Precision: 0.131 (±0.009)
2025-01-06 13:26:16,211 - INFO - Recall: 0.795 (±0.058)
2025-01-06 13:26:16,212 - INFO - F1: 0.225 (±0.014)
2025-01-06 13:26:16,212 - ERROR - Error evaluando LDA: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 13:26:16,212 - INFO - 
Entrenando Random Forest...
2025-01-06 13:26:41,674 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:26:41,675 - INFO - ROC AUC: 0.837 (±0.018)
2025-01-06 13:26:41,676 - INFO - Precision: 0.193 (±0.023)
2025-01-06 13:26:41,676 - INFO - Recall: 0.541 (±0.062)
2025-01-06 13:26:41,676 - INFO - F1: 0.284 (±0.032)
2025-01-06 13:26:41,676 - ERROR - Error evaluando Random Forest: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 13:26:41,677 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 13:26:41,679 - ERROR - Error durante el entrenamiento: Invalid parameter 'class_weight' for estimator GradientBoostingClassifier(learning_rate=0.05, loss='exponential', max_depth=5,
                           min_samples_leaf=8, min_samples_split=10,
                           n_estimators=500, n_iter_no_change=10,
                           random_state=42, subsample=0.8,
                           validation_fraction=0.2). Valid parameters are: ['ccp_alpha', 'criterion', 'init', 'learning_rate', 'loss', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_iter_no_change', 'random_state', 'subsample', 'tol', 'validation_fraction', 'verbose', 'warm_start'].
2025-01-06 13:28:01,560 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:28:01,576 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:28:01,576 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:28:01,577 - INFO - 
Distribución de clases:
2025-01-06 13:28:01,577 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:28:01,577 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:28:01,577 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:28:01,579 - INFO - 
Valores faltantes por columna:
2025-01-06 13:28:01,579 - INFO - bmi: 201 (3.93%)
2025-01-06 13:28:01,579 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:28:01,579 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:28:01,579 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:28:01,580 - INFO - 
age:
2025-01-06 13:28:01,581 - INFO -   Media: 43.23
2025-01-06 13:28:01,581 - INFO -   Mediana: 45.00
2025-01-06 13:28:01,581 - INFO -   Std: 22.61
2025-01-06 13:28:01,581 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:28:01,583 - INFO - 
avg_glucose_level:
2025-01-06 13:28:01,583 - INFO -   Media: 101.00
2025-01-06 13:28:01,583 - INFO -   Mediana: 91.88
2025-01-06 13:28:01,583 - INFO -   Std: 33.21
2025-01-06 13:28:01,583 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:28:01,585 - INFO - 
bmi:
2025-01-06 13:28:01,585 - INFO -   Media: 28.74
2025-01-06 13:28:01,585 - INFO -   Mediana: 28.10
2025-01-06 13:28:01,585 - INFO -   Std: 7.34
2025-01-06 13:28:01,586 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:28:01,586 - INFO - 
=== Información de Outliers ===
2025-01-06 13:28:01,808 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:28:01,814 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:28:01,834 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:28:01,840 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:28:02,492 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:28:02,492 - INFO - 
Entrenando LDA...
2025-01-06 13:28:09,985 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:28:09,986 - INFO - ROC AUC: 0.847 (±0.017)
2025-01-06 13:28:09,986 - INFO - Precision: 0.131 (±0.009)
2025-01-06 13:28:09,986 - INFO - Recall: 0.795 (±0.058)
2025-01-06 13:28:09,987 - INFO - F1: 0.225 (±0.014)
2025-01-06 13:28:09,987 - INFO - LDA - Resultados:
2025-01-06 13:28:09,987 - INFO - ROC AUC: 0.847 (±0.017)
2025-01-06 13:28:09,987 - INFO - Precision: 0.131 (±0.009)
2025-01-06 13:28:09,987 - INFO - Recall: 0.795 (±0.058)
2025-01-06 13:28:09,987 - INFO - F1: 0.225 (±0.014)
2025-01-06 13:28:09,987 - INFO - 
Entrenando Random Forest...
2025-01-06 13:29:02,670 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:29:02,671 - INFO - ROC AUC: 0.829 (±0.016)
2025-01-06 13:29:02,671 - INFO - Precision: 0.190 (±0.028)
2025-01-06 13:29:02,671 - INFO - Recall: 0.459 (±0.051)
2025-01-06 13:29:02,671 - INFO - F1: 0.268 (±0.034)
2025-01-06 13:29:02,672 - INFO - Random Forest - Resultados:
2025-01-06 13:29:02,672 - INFO - ROC AUC: 0.829 (±0.016)
2025-01-06 13:29:02,672 - INFO - Precision: 0.190 (±0.028)
2025-01-06 13:29:02,672 - INFO - Recall: 0.459 (±0.051)
2025-01-06 13:29:02,672 - INFO - F1: 0.268 (±0.034)
2025-01-06 13:29:02,672 - INFO - 
Entrenando Gradient Boosting...
2025-01-06 13:29:41,519 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:29:41,520 - INFO - ROC AUC: 0.814 (±0.019)
2025-01-06 13:29:41,520 - INFO - Precision: 0.252 (±0.087)
2025-01-06 13:29:41,521 - INFO - Recall: 0.122 (±0.035)
2025-01-06 13:29:41,521 - INFO - F1: 0.161 (±0.044)
2025-01-06 13:29:41,521 - INFO - Gradient Boosting - Resultados:
2025-01-06 13:29:41,521 - INFO - ROC AUC: 0.814 (±0.019)
2025-01-06 13:29:41,521 - INFO - Precision: 0.252 (±0.087)
2025-01-06 13:29:41,522 - INFO - Recall: 0.122 (±0.035)
2025-01-06 13:29:41,522 - INFO - F1: 0.161 (±0.044)
2025-01-06 13:29:41,522 - INFO - 
Entrenando SVM...
2025-01-06 13:30:50,842 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:30:50,842 - INFO - ROC AUC: 0.750 (±0.026)
2025-01-06 13:30:50,842 - INFO - Precision: 0.126 (±0.023)
2025-01-06 13:30:50,843 - INFO - Recall: 0.324 (±0.068)
2025-01-06 13:30:50,843 - INFO - F1: 0.181 (±0.034)
2025-01-06 13:30:50,843 - INFO - SVM - Resultados:
2025-01-06 13:30:50,843 - INFO - ROC AUC: 0.750 (±0.026)
2025-01-06 13:30:50,843 - INFO - Precision: 0.126 (±0.023)
2025-01-06 13:30:50,843 - INFO - Recall: 0.324 (±0.068)
2025-01-06 13:30:50,843 - INFO - F1: 0.181 (±0.034)
2025-01-06 13:30:50,844 - INFO - 
Entrenando Logistic Regression...
2025-01-06 13:30:53,281 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:30:53,282 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 13:30:53,282 - INFO - Precision: 0.132 (±0.007)
2025-01-06 13:30:53,283 - INFO - Recall: 0.800 (±0.054)
2025-01-06 13:30:53,283 - INFO - F1: 0.227 (±0.013)
2025-01-06 13:30:53,283 - INFO - Logistic Regression - Resultados:
2025-01-06 13:30:53,283 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 13:30:53,283 - INFO - Precision: 0.132 (±0.007)
2025-01-06 13:30:53,284 - INFO - Recall: 0.800 (±0.054)
2025-01-06 13:30:53,284 - INFO - F1: 0.227 (±0.013)
2025-01-06 13:30:53,284 - INFO - 
Entrenando Ensemble...
2025-01-06 13:32:02,335 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:32:02,336 - INFO - ROC AUC: 0.838 (±0.016)
2025-01-06 13:32:02,336 - INFO - Precision: 0.189 (±0.031)
2025-01-06 13:32:02,337 - INFO - Recall: 0.484 (±0.059)
2025-01-06 13:32:02,337 - INFO - F1: 0.271 (±0.040)
2025-01-06 13:32:02,337 - INFO - Ensemble - Resultados:
2025-01-06 13:32:02,337 - INFO - ROC AUC: 0.838 (±0.016)
2025-01-06 13:32:02,337 - INFO - Precision: 0.189 (±0.031)
2025-01-06 13:32:02,337 - INFO - Recall: 0.484 (±0.059)
2025-01-06 13:32:02,338 - INFO - F1: 0.271 (±0.040)
2025-01-06 13:32:02,338 - INFO - 
Entrenando Stacking...
2025-01-06 13:41:53,818 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:41:53,836 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:41:53,836 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:41:53,836 - INFO - 
Distribución de clases:
2025-01-06 13:41:53,837 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:41:53,837 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:41:53,837 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:41:53,838 - INFO - 
Valores faltantes por columna:
2025-01-06 13:41:53,838 - INFO - bmi: 201 (3.93%)
2025-01-06 13:41:53,839 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:41:53,839 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:41:53,839 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:41:53,840 - INFO - 
age:
2025-01-06 13:41:53,841 - INFO -   Media: 43.23
2025-01-06 13:41:53,841 - INFO -   Mediana: 45.00
2025-01-06 13:41:53,841 - INFO -   Std: 22.61
2025-01-06 13:41:53,841 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:41:53,842 - INFO - 
avg_glucose_level:
2025-01-06 13:41:53,843 - INFO -   Media: 101.00
2025-01-06 13:41:53,843 - INFO -   Mediana: 91.88
2025-01-06 13:41:53,843 - INFO -   Std: 33.21
2025-01-06 13:41:53,843 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:41:53,845 - INFO - 
bmi:
2025-01-06 13:41:53,845 - INFO -   Media: 28.74
2025-01-06 13:41:53,845 - INFO -   Mediana: 28.10
2025-01-06 13:41:53,846 - INFO -   Std: 7.34
2025-01-06 13:41:53,846 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:41:53,846 - INFO - 
=== Información de Outliers ===
2025-01-06 13:41:54,062 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:41:54,068 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:41:54,089 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:41:54,096 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:41:54,796 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:41:54,796 - INFO - 
Entrenando LDA...
2025-01-06 13:42:02,598 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:42:02,599 - INFO - ROC AUC: 0.820 (±0.018)
2025-01-06 13:42:02,599 - INFO - Precision: 0.084 (±0.002)
2025-01-06 13:42:02,599 - INFO - Recall: 0.965 (±0.020)
2025-01-06 13:42:02,599 - INFO - F1: 0.155 (±0.004)
2025-01-06 13:42:02,599 - INFO - LDA - Resultados:
2025-01-06 13:42:02,600 - INFO - ROC AUC: 0.820 (±0.018)
2025-01-06 13:42:02,600 - INFO - Precision: 0.084 (±0.002)
2025-01-06 13:42:02,600 - INFO - Recall: 0.965 (±0.020)
2025-01-06 13:42:02,600 - INFO - F1: 0.155 (±0.004)
2025-01-06 13:42:02,600 - INFO - 
Entrenando Logistic Regression...
2025-01-06 13:42:06,533 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:42:06,534 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 13:42:06,534 - INFO - Precision: 0.133 (±0.007)
2025-01-06 13:42:06,534 - INFO - Recall: 0.803 (±0.055)
2025-01-06 13:42:06,534 - INFO - F1: 0.228 (±0.013)
2025-01-06 13:42:06,535 - INFO - Logistic Regression - Resultados:
2025-01-06 13:42:06,535 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 13:42:06,535 - INFO - Precision: 0.133 (±0.007)
2025-01-06 13:42:06,535 - INFO - Recall: 0.803 (±0.055)
2025-01-06 13:42:06,535 - INFO - F1: 0.228 (±0.013)
2025-01-06 13:42:06,535 - INFO - 
Entrenando Random Forest...
2025-01-06 13:42:30,715 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:42:30,716 - INFO - ROC AUC: 0.831 (±0.017)
2025-01-06 13:42:30,716 - INFO - Precision: 0.173 (±0.024)
2025-01-06 13:42:30,716 - INFO - Recall: 0.571 (±0.070)
2025-01-06 13:42:30,717 - INFO - F1: 0.265 (±0.035)
2025-01-06 13:42:30,717 - INFO - Random Forest - Resultados:
2025-01-06 13:42:30,717 - INFO - ROC AUC: 0.831 (±0.017)
2025-01-06 13:42:30,717 - INFO - Precision: 0.173 (±0.024)
2025-01-06 13:42:30,717 - INFO - Recall: 0.571 (±0.070)
2025-01-06 13:42:30,718 - INFO - F1: 0.265 (±0.035)
2025-01-06 13:42:30,822 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 13:42:30,823 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 13:42:30,823 - INFO - ROC AUC Score: 0.845 (±0.016)
2025-01-06 13:42:31,246 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 13:42:31,246 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 13:42:31,277 - INFO - 
Informe de Clasificación:
2025-01-06 13:42:31,282 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.74      0.85       972
           1       0.14      0.80      0.24        50

    accuracy                           0.75      1022
   macro avg       0.56      0.77      0.54      1022
weighted avg       0.94      0.75      0.82      1022

2025-01-06 13:42:31,284 - INFO - 
Matriz de Confusión:
2025-01-06 13:42:31,284 - INFO - 
[[TN=723 FP=249]
2025-01-06 13:42:31,284 - INFO -  [FN=10 TP=40]]
2025-01-06 13:42:31,284 - INFO - 
Métricas Detalladas:
2025-01-06 13:42:31,285 - INFO - Precision: 0.138
2025-01-06 13:42:31,285 - INFO - Recall (Sensibilidad): 0.800
2025-01-06 13:42:31,285 - INFO - Especificidad: 0.744
2025-01-06 13:42:31,286 - INFO - Average Precision Score: 0.250
2025-01-06 13:42:31,286 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 13:42:31,290 - ERROR - Error guardando artefactos del modelo: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 13:42:31,291 - INFO - 
Entrenamiento completado en 0:00:37.471868
2025-01-06 13:47:45,073 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:47:45,074 - ERROR - Error cargando datos: [Errno 2] No such file or directory: './data/healthcare-dataset-stroke-data.csv'
2025-01-06 13:47:45,075 - ERROR - Error durante el entrenamiento: [Errno 2] No such file or directory: './data/healthcare-dataset-stroke-data.csv'
2025-01-06 13:49:00,204 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:49:00,220 - ERROR - Error durante el entrenamiento: not enough values to unpack (expected 7, got 4)
2025-01-06 13:51:05,594 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:51:05,609 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:51:05,609 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:51:05,610 - INFO - 
Distribución de clases:
2025-01-06 13:51:05,610 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:51:05,610 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:51:05,610 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:51:05,611 - INFO - 
Valores faltantes por columna:
2025-01-06 13:51:05,611 - INFO - bmi: 201 (3.93%)
2025-01-06 13:51:05,612 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:51:05,612 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:51:05,612 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:51:05,613 - INFO - 
age:
2025-01-06 13:51:05,613 - INFO -   Media: 43.23
2025-01-06 13:51:05,613 - INFO -   Mediana: 45.00
2025-01-06 13:51:05,613 - INFO -   Std: 22.61
2025-01-06 13:51:05,613 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:51:05,614 - INFO - 
avg_glucose_level:
2025-01-06 13:51:05,614 - INFO -   Media: 101.00
2025-01-06 13:51:05,615 - INFO -   Mediana: 91.88
2025-01-06 13:51:05,615 - INFO -   Std: 33.21
2025-01-06 13:51:05,615 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:51:05,616 - INFO - 
bmi:
2025-01-06 13:51:05,616 - INFO -   Media: 28.74
2025-01-06 13:51:05,617 - INFO -   Mediana: 28.10
2025-01-06 13:51:05,617 - INFO -   Std: 7.34
2025-01-06 13:51:05,617 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:51:05,617 - INFO - 
=== Información de Outliers ===
2025-01-06 13:51:05,830 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:05,836 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:05,858 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:05,864 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:06,567 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:51:06,567 - INFO - 
Entrenando LDA...
2025-01-06 13:51:10,137 - ERROR - Error evaluando LDA: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 1000, in fit_transform
    result = self._call_func_on_transformers(
        X,
    ...<3 lines>...
        routed_params=routed_params,
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 909, in _call_func_on_transformers
    return Parallel(n_jobs=self.n_jobs)(jobs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 77, in __call__
    return super().__call__(iterable_with_config)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1918, in __call__
    return output if self.return_generator else list(output)
                                                ~~~~^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1847, in _get_sequential_output
    res = func(*args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 139, in __call__
    return self.function(*args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\pipeline.py", line 1540, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 585, in fit_transform
    Xt, yt = self._fit(X, y, routed_params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 921, in fit_transform
    return self.fit(X, y, **fit_params).transform(X)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 260, in transform
    out = self._transform(X, func=self.func, kw_args=self.kw_args)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 387, in _transform
    return func(X, **(kw_args if kw_args else {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\backend\training.py", line 103, in handle_outliers
    Q1 = X[col].quantile(0.25)
         ~^^^^^
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices

2025-01-06 13:51:10,144 - INFO - 
Entrenando Logistic Regression...
2025-01-06 13:51:11,563 - ERROR - Error evaluando Logistic Regression: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 1000, in fit_transform
    result = self._call_func_on_transformers(
        X,
    ...<3 lines>...
        routed_params=routed_params,
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 909, in _call_func_on_transformers
    return Parallel(n_jobs=self.n_jobs)(jobs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 77, in __call__
    return super().__call__(iterable_with_config)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1918, in __call__
    return output if self.return_generator else list(output)
                                                ~~~~^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1847, in _get_sequential_output
    res = func(*args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 139, in __call__
    return self.function(*args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\pipeline.py", line 1540, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 585, in fit_transform
    Xt, yt = self._fit(X, y, routed_params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 921, in fit_transform
    return self.fit(X, y, **fit_params).transform(X)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 260, in transform
    out = self._transform(X, func=self.func, kw_args=self.kw_args)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 387, in _transform
    return func(X, **(kw_args if kw_args else {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\backend\training.py", line 103, in handle_outliers
    Q1 = X[col].quantile(0.25)
         ~^^^^^
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices

2025-01-06 13:51:11,567 - INFO - 
Entrenando Random Forest...
2025-01-06 13:51:11,882 - ERROR - Error evaluando Random Forest: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 1000, in fit_transform
    result = self._call_func_on_transformers(
        X,
    ...<3 lines>...
        routed_params=routed_params,
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 909, in _call_func_on_transformers
    return Parallel(n_jobs=self.n_jobs)(jobs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 77, in __call__
    return super().__call__(iterable_with_config)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1918, in __call__
    return output if self.return_generator else list(output)
                                                ~~~~^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1847, in _get_sequential_output
    res = func(*args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 139, in __call__
    return self.function(*args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\pipeline.py", line 1540, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 585, in fit_transform
    Xt, yt = self._fit(X, y, routed_params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 921, in fit_transform
    return self.fit(X, y, **fit_params).transform(X)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 260, in transform
    out = self._transform(X, func=self.func, kw_args=self.kw_args)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 387, in _transform
    return func(X, **(kw_args if kw_args else {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\backend\training.py", line 103, in handle_outliers
    Q1 = X[col].quantile(0.25)
         ~^^^^^
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices

2025-01-06 13:51:12,084 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 13:51:12,084 - ERROR - Error durante el entrenamiento: No hay resultados de modelos para comparar
2025-01-06 13:51:35,262 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:51:35,278 - INFO - Dataset cargado: (5110, 19)
2025-01-06 13:51:35,278 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:51:35,278 - INFO - 
Distribución de clases:
2025-01-06 13:51:35,278 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:51:35,279 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:51:35,279 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:51:35,280 - INFO - 
Valores faltantes por columna:
2025-01-06 13:51:35,280 - INFO - bmi: 201 (3.93%)
2025-01-06 13:51:35,280 - INFO - log_bmi: 201 (3.93%)
2025-01-06 13:51:35,280 - INFO - bmi_category: 201 (3.93%)
2025-01-06 13:51:35,280 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:51:35,281 - INFO - 
age:
2025-01-06 13:51:35,281 - INFO -   Media: 43.23
2025-01-06 13:51:35,282 - INFO -   Mediana: 45.00
2025-01-06 13:51:35,282 - INFO -   Std: 22.61
2025-01-06 13:51:35,282 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:51:35,283 - INFO - 
avg_glucose_level:
2025-01-06 13:51:35,283 - INFO -   Media: 101.00
2025-01-06 13:51:35,283 - INFO -   Mediana: 91.88
2025-01-06 13:51:35,283 - INFO -   Std: 33.21
2025-01-06 13:51:35,283 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 13:51:35,284 - INFO - 
bmi:
2025-01-06 13:51:35,284 - INFO -   Media: 28.74
2025-01-06 13:51:35,285 - INFO -   Mediana: 28.10
2025-01-06 13:51:35,285 - INFO -   Std: 7.34
2025-01-06 13:51:35,285 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 13:51:35,285 - INFO - 
=== Información de Outliers ===
2025-01-06 13:51:35,505 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:35,512 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:35,533 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:35,541 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:51:36,237 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:51:36,237 - INFO - 
Entrenando LDA...
2025-01-06 13:51:39,721 - ERROR - Error evaluando LDA: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 1000, in fit_transform
    result = self._call_func_on_transformers(
        X,
    ...<3 lines>...
        routed_params=routed_params,
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 909, in _call_func_on_transformers
    return Parallel(n_jobs=self.n_jobs)(jobs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 77, in __call__
    return super().__call__(iterable_with_config)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1918, in __call__
    return output if self.return_generator else list(output)
                                                ~~~~^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1847, in _get_sequential_output
    res = func(*args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 139, in __call__
    return self.function(*args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\pipeline.py", line 1540, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 585, in fit_transform
    Xt, yt = self._fit(X, y, routed_params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 921, in fit_transform
    return self.fit(X, y, **fit_params).transform(X)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 260, in transform
    out = self._transform(X, func=self.func, kw_args=self.kw_args)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 387, in _transform
    return func(X, **(kw_args if kw_args else {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\backend\training.py", line 103, in handle_outliers
    Q1 = X[col].quantile(0.25)
         ~^^^^^
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices

2025-01-06 13:51:39,727 - INFO - 
Entrenando Logistic Regression...
2025-01-06 13:51:41,126 - ERROR - Error evaluando Logistic Regression: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 1000, in fit_transform
    result = self._call_func_on_transformers(
        X,
    ...<3 lines>...
        routed_params=routed_params,
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 909, in _call_func_on_transformers
    return Parallel(n_jobs=self.n_jobs)(jobs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 77, in __call__
    return super().__call__(iterable_with_config)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1918, in __call__
    return output if self.return_generator else list(output)
                                                ~~~~^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1847, in _get_sequential_output
    res = func(*args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 139, in __call__
    return self.function(*args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\pipeline.py", line 1540, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 585, in fit_transform
    Xt, yt = self._fit(X, y, routed_params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 921, in fit_transform
    return self.fit(X, y, **fit_params).transform(X)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 260, in transform
    out = self._transform(X, func=self.func, kw_args=self.kw_args)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 387, in _transform
    return func(X, **(kw_args if kw_args else {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\backend\training.py", line 103, in handle_outliers
    Q1 = X[col].quantile(0.25)
         ~^^^^^
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices

2025-01-06 13:51:41,130 - INFO - 
Entrenando Random Forest...
2025-01-06 13:51:41,514 - ERROR - Error evaluando Random Forest: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 1000, in fit_transform
    result = self._call_func_on_transformers(
        X,
    ...<3 lines>...
        routed_params=routed_params,
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 909, in _call_func_on_transformers
    return Parallel(n_jobs=self.n_jobs)(jobs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 77, in __call__
    return super().__call__(iterable_with_config)
           ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1918, in __call__
    return output if self.return_generator else list(output)
                                                ~~~~^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\parallel.py", line 1847, in _get_sequential_output
    res = func(*args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\parallel.py", line 139, in __call__
    return self.function(*args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\pipeline.py", line 1540, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 585, in fit_transform
    Xt, yt = self._fit(X, y, routed_params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 921, in fit_transform
    return self.fit(X, y, **fit_params).transform(X)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 260, in transform
    out = self._transform(X, func=self.func, kw_args=self.kw_args)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\preprocessing\_function_transformer.py", line 387, in _transform
    return func(X, **(kw_args if kw_args else {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\backend\training.py", line 103, in handle_outliers
    Q1 = X[col].quantile(0.25)
         ~^^^^^
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices

2025-01-06 13:51:41,657 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 13:51:41,658 - ERROR - Error durante el entrenamiento: No hay resultados de modelos para comparar
2025-01-06 13:52:48,700 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:52:48,709 - ERROR - Error durante el entrenamiento: unsupported operand type(s) for -: 'str' and 'str'
2025-01-06 13:53:56,866 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:53:56,867 - ERROR - Error cargando datos: [Errno 2] No such file or directory: './data/healthcare-dataset-stroke-data.csv'
2025-01-06 13:53:56,867 - ERROR - Error durante el entrenamiento: [Errno 2] No such file or directory: './data/healthcare-dataset-stroke-data.csv'
2025-01-06 13:54:22,375 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:54:22,383 - INFO - Dataset cargado: (5110, 11)
2025-01-06 13:54:22,383 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:54:22,383 - INFO - 
Distribución de clases:
2025-01-06 13:54:22,384 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:54:22,384 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:54:22,384 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:54:22,385 - INFO - 
Valores faltantes por columna:
2025-01-06 13:54:22,385 - INFO - bmi: 201 (3.93%)
2025-01-06 13:54:22,385 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:54:22,385 - INFO - 
age:
2025-01-06 13:54:22,385 - INFO -   Media: 43.23
2025-01-06 13:54:22,386 - INFO -   Mediana: 45.00
2025-01-06 13:54:22,386 - INFO -   Std: 22.61
2025-01-06 13:54:22,386 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:54:22,386 - INFO - 
avg_glucose_level:
2025-01-06 13:54:22,387 - INFO -   Media: 106.15
2025-01-06 13:54:22,387 - INFO -   Mediana: 91.88
2025-01-06 13:54:22,387 - INFO -   Std: 45.28
2025-01-06 13:54:22,387 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 13:54:22,388 - INFO - 
bmi:
2025-01-06 13:54:22,388 - INFO -   Media: 28.89
2025-01-06 13:54:22,388 - INFO -   Mediana: 28.10
2025-01-06 13:54:22,388 - INFO -   Std: 7.85
2025-01-06 13:54:22,389 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 13:54:22,389 - INFO - 
=== Información de Outliers ===
2025-01-06 13:54:22,391 - INFO - 
avg_glucose_level:
2025-01-06 13:54:22,391 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 13:54:22,391 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 13:54:22,392 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 13:54:22,393 - INFO - 
bmi:
2025-01-06 13:54:22,393 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 13:54:22,393 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 13:54:22,393 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 13:54:22,394 - INFO - Dataset cargado: (5110, 10)
2025-01-06 13:54:22,394 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:54:22,394 - INFO - 
Distribución de clases:
2025-01-06 13:54:22,395 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:54:22,395 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:54:22,395 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:54:22,396 - INFO - 
Valores faltantes por columna:
2025-01-06 13:54:22,396 - INFO - bmi: 201 (3.93%)
2025-01-06 13:54:22,397 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:54:22,398 - INFO - 
age:
2025-01-06 13:54:22,398 - INFO -   Media: 43.23
2025-01-06 13:54:22,398 - INFO -   Mediana: 45.00
2025-01-06 13:54:22,398 - INFO -   Std: 22.61
2025-01-06 13:54:22,399 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:54:22,400 - INFO - 
avg_glucose_level:
2025-01-06 13:54:22,400 - INFO -   Media: 106.15
2025-01-06 13:54:22,400 - INFO -   Mediana: 91.88
2025-01-06 13:54:22,400 - INFO -   Std: 45.28
2025-01-06 13:54:22,400 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 13:54:22,401 - INFO - 
bmi:
2025-01-06 13:54:22,401 - INFO -   Media: 28.89
2025-01-06 13:54:22,401 - INFO -   Mediana: 28.10
2025-01-06 13:54:22,402 - INFO -   Std: 7.85
2025-01-06 13:54:22,402 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 13:54:22,402 - INFO - 
=== Información de Outliers ===
2025-01-06 13:54:22,404 - INFO - 
avg_glucose_level:
2025-01-06 13:54:22,404 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 13:54:22,405 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 13:54:22,405 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 13:54:22,406 - INFO - 
bmi:
2025-01-06 13:54:22,406 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 13:54:22,407 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 13:54:22,407 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 13:54:22,611 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:54:22,617 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:54:22,636 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:54:22,642 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:54:23,260 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:54:23,261 - INFO - 
Entrenando LDA...
2025-01-06 13:54:29,479 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:54:29,480 - INFO - ROC AUC: 0.832 (±0.016)
2025-01-06 13:54:29,480 - INFO - Precision: 0.090 (±0.004)
2025-01-06 13:54:29,480 - INFO - Recall: 0.954 (±0.035)
2025-01-06 13:54:29,480 - INFO - F1: 0.165 (±0.007)
2025-01-06 13:54:29,481 - INFO - LDA - Resultados:
2025-01-06 13:54:29,481 - INFO - ROC AUC: 0.832 (±0.016)
2025-01-06 13:54:29,481 - INFO - Precision: 0.090 (±0.004)
2025-01-06 13:54:29,481 - INFO - Recall: 0.954 (±0.035)
2025-01-06 13:54:29,481 - INFO - F1: 0.165 (±0.007)
2025-01-06 13:54:29,481 - INFO - 
Entrenando Logistic Regression...
2025-01-06 13:54:31,764 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:54:31,765 - INFO - ROC AUC: 0.836 (±0.017)
2025-01-06 13:54:31,765 - INFO - Precision: 0.168 (±0.019)
2025-01-06 13:54:31,765 - INFO - Recall: 0.581 (±0.064)
2025-01-06 13:54:31,766 - INFO - F1: 0.261 (±0.029)
2025-01-06 13:54:31,766 - INFO - Logistic Regression - Resultados:
2025-01-06 13:54:31,766 - INFO - ROC AUC: 0.836 (±0.017)
2025-01-06 13:54:31,766 - INFO - Precision: 0.168 (±0.019)
2025-01-06 13:54:31,766 - INFO - Recall: 0.581 (±0.064)
2025-01-06 13:54:31,766 - INFO - F1: 0.261 (±0.029)
2025-01-06 13:54:31,766 - INFO - 
Entrenando Random Forest...
2025-01-06 13:54:52,460 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:54:52,461 - INFO - ROC AUC: 0.825 (±0.018)
2025-01-06 13:54:52,461 - INFO - Precision: 0.167 (±0.037)
2025-01-06 13:54:52,461 - INFO - Recall: 0.245 (±0.059)
2025-01-06 13:54:52,462 - INFO - F1: 0.198 (±0.044)
2025-01-06 13:54:52,462 - INFO - Random Forest - Resultados:
2025-01-06 13:54:52,462 - INFO - ROC AUC: 0.825 (±0.018)
2025-01-06 13:54:52,462 - INFO - Precision: 0.167 (±0.037)
2025-01-06 13:54:52,462 - INFO - Recall: 0.245 (±0.059)
2025-01-06 13:54:52,462 - INFO - F1: 0.198 (±0.044)
2025-01-06 13:54:52,556 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 13:54:52,557 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 13:54:52,557 - INFO - ROC AUC Score: 0.836 (±0.017)
2025-01-06 13:54:52,688 - ERROR - Error en analyze_feature_importance: 'm'
2025-01-06 13:54:52,688 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 13:54:52,716 - INFO - 
Informe de Clasificación:
2025-01-06 13:54:52,721 - INFO - 
              precision    recall  f1-score   support

           0       0.98      0.86      0.92       972
           1       0.20      0.72      0.32        50

    accuracy                           0.85      1022
   macro avg       0.59      0.79      0.62      1022
weighted avg       0.95      0.85      0.89      1022

2025-01-06 13:54:52,723 - INFO - 
Matriz de Confusión:
2025-01-06 13:54:52,723 - INFO - 
[[TN=832 FP=140]
2025-01-06 13:54:52,723 - INFO -  [FN=14 TP=36]]
2025-01-06 13:54:52,723 - INFO - 
Métricas Detalladas:
2025-01-06 13:54:52,723 - INFO - Precision: 0.205
2025-01-06 13:54:52,723 - INFO - Recall (Sensibilidad): 0.720
2025-01-06 13:54:52,724 - INFO - Especificidad: 0.856
2025-01-06 13:54:52,724 - INFO - Average Precision Score: 0.258
2025-01-06 13:54:52,725 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 13:54:52,730 - ERROR - Error guardando artefactos del modelo: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 13:54:52,730 - INFO - 
Entrenamiento completado en 0:00:30.355295
2025-01-06 13:57:32,713 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:57:32,722 - INFO - Dataset cargado: (5110, 13)
2025-01-06 13:57:32,723 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:57:32,723 - INFO - 
Distribución de clases:
2025-01-06 13:57:32,723 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:57:32,723 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:57:32,723 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:57:32,724 - INFO - 
Valores faltantes por columna:
2025-01-06 13:57:32,724 - INFO - bmi: 201 (3.93%)
2025-01-06 13:57:32,724 - INFO - glucose_bmi_ratio: 201 (3.93%)
2025-01-06 13:57:32,724 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:57:32,725 - INFO - 
age:
2025-01-06 13:57:32,725 - INFO -   Media: 43.23
2025-01-06 13:57:32,725 - INFO -   Mediana: 45.00
2025-01-06 13:57:32,725 - INFO -   Std: 22.61
2025-01-06 13:57:32,725 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:57:32,726 - INFO - 
avg_glucose_level:
2025-01-06 13:57:32,726 - INFO -   Media: 106.15
2025-01-06 13:57:32,726 - INFO -   Mediana: 91.88
2025-01-06 13:57:32,726 - INFO -   Std: 45.28
2025-01-06 13:57:32,727 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 13:57:32,727 - INFO - 
bmi:
2025-01-06 13:57:32,727 - INFO -   Media: 28.89
2025-01-06 13:57:32,728 - INFO -   Mediana: 28.10
2025-01-06 13:57:32,728 - INFO -   Std: 7.85
2025-01-06 13:57:32,728 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 13:57:32,728 - INFO - 
age_squared:
2025-01-06 13:57:32,729 - INFO -   Media: 2379.77
2025-01-06 13:57:32,729 - INFO -   Mediana: 2025.00
2025-01-06 13:57:32,729 - INFO -   Std: 1952.33
2025-01-06 13:57:32,729 - INFO -   Rango: [0.01 - 6724.00]
2025-01-06 13:57:32,730 - INFO - 
glucose_bmi_ratio:
2025-01-06 13:57:32,730 - INFO -   Media: 3.83
2025-01-06 13:57:32,730 - INFO -   Mediana: 3.43
2025-01-06 13:57:32,730 - INFO -   Std: 1.69
2025-01-06 13:57:32,730 - INFO -   Rango: [0.62 - 16.05]
2025-01-06 13:57:32,731 - INFO - 
=== Información de Outliers ===
2025-01-06 13:57:32,733 - INFO - 
avg_glucose_level:
2025-01-06 13:57:32,734 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 13:57:32,734 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 13:57:32,734 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 13:57:32,735 - INFO - 
bmi:
2025-01-06 13:57:32,736 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 13:57:32,736 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 13:57:32,736 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 13:57:32,738 - INFO - 
glucose_bmi_ratio:
2025-01-06 13:57:32,738 - INFO -   Outliers detectados: 179 (3.50%)
2025-01-06 13:57:32,738 - INFO -   Rango normal: [-0.38 - 7.63]
2025-01-06 13:57:32,738 - INFO -   Valores extremos: [7.64 - 16.05]
2025-01-06 13:57:32,739 - INFO - Dataset cargado: (5110, 12)
2025-01-06 13:57:32,739 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:57:32,740 - INFO - 
Distribución de clases:
2025-01-06 13:57:32,740 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:57:32,740 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:57:32,740 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:57:32,741 - INFO - 
Valores faltantes por columna:
2025-01-06 13:57:32,742 - INFO - bmi: 201 (3.93%)
2025-01-06 13:57:32,742 - INFO - glucose_bmi_ratio: 201 (3.93%)
2025-01-06 13:57:32,742 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:57:32,744 - INFO - 
age:
2025-01-06 13:57:32,744 - INFO -   Media: 43.23
2025-01-06 13:57:32,744 - INFO -   Mediana: 45.00
2025-01-06 13:57:32,744 - INFO -   Std: 22.61
2025-01-06 13:57:32,744 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:57:32,745 - INFO - 
avg_glucose_level:
2025-01-06 13:57:32,746 - INFO -   Media: 106.15
2025-01-06 13:57:32,746 - INFO -   Mediana: 91.88
2025-01-06 13:57:32,746 - INFO -   Std: 45.28
2025-01-06 13:57:32,746 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 13:57:32,748 - INFO - 
bmi:
2025-01-06 13:57:32,748 - INFO -   Media: 28.89
2025-01-06 13:57:32,748 - INFO -   Mediana: 28.10
2025-01-06 13:57:32,748 - INFO -   Std: 7.85
2025-01-06 13:57:32,748 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 13:57:32,748 - INFO - 
=== Información de Outliers ===
2025-01-06 13:57:32,751 - INFO - 
avg_glucose_level:
2025-01-06 13:57:32,751 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 13:57:32,751 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 13:57:32,751 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 13:57:32,752 - INFO - 
bmi:
2025-01-06 13:57:32,753 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 13:57:32,753 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 13:57:32,753 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 13:57:32,973 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:57:32,979 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:57:32,998 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:57:33,003 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:57:33,605 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:57:33,606 - INFO - 
Entrenando LDA...
2025-01-06 13:57:39,372 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:57:39,373 - INFO - ROC AUC: 0.834 (±0.015)
2025-01-06 13:57:39,373 - INFO - Precision: 0.093 (±0.004)
2025-01-06 13:57:39,373 - INFO - Recall: 0.955 (±0.032)
2025-01-06 13:57:39,373 - INFO - F1: 0.169 (±0.008)
2025-01-06 13:57:39,374 - INFO - LDA - Resultados:
2025-01-06 13:57:39,374 - INFO - ROC AUC: 0.834 (±0.015)
2025-01-06 13:57:39,374 - INFO - Precision: 0.093 (±0.004)
2025-01-06 13:57:39,374 - INFO - Recall: 0.955 (±0.032)
2025-01-06 13:57:39,374 - INFO - F1: 0.169 (±0.008)
2025-01-06 13:57:39,374 - INFO - 
Entrenando Logistic Regression...
2025-01-06 13:57:41,598 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:57:41,599 - INFO - ROC AUC: 0.839 (±0.015)
2025-01-06 13:57:41,599 - INFO - Precision: 0.173 (±0.017)
2025-01-06 13:57:41,599 - INFO - Recall: 0.601 (±0.061)
2025-01-06 13:57:41,599 - INFO - F1: 0.269 (±0.025)
2025-01-06 13:57:41,599 - INFO - Logistic Regression - Resultados:
2025-01-06 13:57:41,600 - INFO - ROC AUC: 0.839 (±0.015)
2025-01-06 13:57:41,600 - INFO - Precision: 0.173 (±0.017)
2025-01-06 13:57:41,600 - INFO - Recall: 0.601 (±0.061)
2025-01-06 13:57:41,600 - INFO - F1: 0.269 (±0.025)
2025-01-06 13:57:41,600 - INFO - 
Entrenando Random Forest...
2025-01-06 13:58:05,309 - INFO - 
Métricas de validación cruzada:
2025-01-06 13:58:05,309 - INFO - ROC AUC: 0.827 (±0.017)
2025-01-06 13:58:05,310 - INFO - Precision: 0.184 (±0.040)
2025-01-06 13:58:05,310 - INFO - Recall: 0.292 (±0.055)
2025-01-06 13:58:05,310 - INFO - F1: 0.225 (±0.045)
2025-01-06 13:58:05,310 - INFO - Random Forest - Resultados:
2025-01-06 13:58:05,311 - INFO - ROC AUC: 0.827 (±0.017)
2025-01-06 13:58:05,311 - INFO - Precision: 0.184 (±0.040)
2025-01-06 13:58:05,311 - INFO - Recall: 0.292 (±0.055)
2025-01-06 13:58:05,311 - INFO - F1: 0.225 (±0.045)
2025-01-06 13:58:05,411 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 13:58:05,411 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 13:58:05,412 - INFO - ROC AUC Score: 0.839 (±0.015)
2025-01-06 13:58:05,636 - ERROR - Error en analyze_feature_importance: 'm'
2025-01-06 13:58:05,636 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 13:58:05,663 - INFO - 
Informe de Clasificación:
2025-01-06 13:58:05,668 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.85      0.92       972
           1       0.21      0.76      0.33        50

    accuracy                           0.85      1022
   macro avg       0.60      0.81      0.62      1022
weighted avg       0.95      0.85      0.89      1022

2025-01-06 13:58:05,669 - INFO - 
Matriz de Confusión:
2025-01-06 13:58:05,670 - INFO - 
[[TN=831 FP=141]
2025-01-06 13:58:05,670 - INFO -  [FN=12 TP=38]]
2025-01-06 13:58:05,670 - INFO - 
Métricas Detalladas:
2025-01-06 13:58:05,670 - INFO - Precision: 0.212
2025-01-06 13:58:05,670 - INFO - Recall (Sensibilidad): 0.760
2025-01-06 13:58:05,670 - INFO - Especificidad: 0.855
2025-01-06 13:58:05,671 - INFO - Average Precision Score: 0.255
2025-01-06 13:58:05,672 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 13:58:05,676 - ERROR - Error guardando artefactos del modelo: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 13:58:05,676 - INFO - 
Entrenamiento completado en 0:00:32.962276
2025-01-06 13:59:57,202 - INFO - Iniciando entrenamiento del modelo
2025-01-06 13:59:57,209 - INFO - Dataset cargado: (5110, 13)
2025-01-06 13:59:57,210 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:59:57,210 - INFO - 
Distribución de clases:
2025-01-06 13:59:57,210 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:59:57,210 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:59:57,210 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:59:57,212 - INFO - 
Valores faltantes por columna:
2025-01-06 13:59:57,212 - INFO - bmi: 201 (3.93%)
2025-01-06 13:59:57,212 - INFO - glucose_bmi_ratio: 201 (3.93%)
2025-01-06 13:59:57,212 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:59:57,212 - INFO - 
age:
2025-01-06 13:59:57,212 - INFO -   Media: 43.23
2025-01-06 13:59:57,213 - INFO -   Mediana: 45.00
2025-01-06 13:59:57,213 - INFO -   Std: 22.61
2025-01-06 13:59:57,213 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:59:57,213 - INFO - 
avg_glucose_level:
2025-01-06 13:59:57,214 - INFO -   Media: 106.15
2025-01-06 13:59:57,214 - INFO -   Mediana: 91.88
2025-01-06 13:59:57,214 - INFO -   Std: 45.28
2025-01-06 13:59:57,214 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 13:59:57,215 - INFO - 
bmi:
2025-01-06 13:59:57,215 - INFO -   Media: 28.89
2025-01-06 13:59:57,215 - INFO -   Mediana: 28.10
2025-01-06 13:59:57,215 - INFO -   Std: 7.85
2025-01-06 13:59:57,216 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 13:59:57,216 - INFO - 
age_squared:
2025-01-06 13:59:57,216 - INFO -   Media: 2379.77
2025-01-06 13:59:57,216 - INFO -   Mediana: 2025.00
2025-01-06 13:59:57,217 - INFO -   Std: 1952.33
2025-01-06 13:59:57,217 - INFO -   Rango: [0.01 - 6724.00]
2025-01-06 13:59:57,217 - INFO - 
glucose_bmi_ratio:
2025-01-06 13:59:57,217 - INFO -   Media: 3.83
2025-01-06 13:59:57,218 - INFO -   Mediana: 3.43
2025-01-06 13:59:57,218 - INFO -   Std: 1.69
2025-01-06 13:59:57,218 - INFO -   Rango: [0.62 - 16.05]
2025-01-06 13:59:57,218 - INFO - 
=== Información de Outliers ===
2025-01-06 13:59:57,221 - INFO - 
avg_glucose_level:
2025-01-06 13:59:57,221 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 13:59:57,221 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 13:59:57,221 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 13:59:57,223 - INFO - 
bmi:
2025-01-06 13:59:57,223 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 13:59:57,223 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 13:59:57,223 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 13:59:57,225 - INFO - 
glucose_bmi_ratio:
2025-01-06 13:59:57,225 - INFO -   Outliers detectados: 179 (3.50%)
2025-01-06 13:59:57,226 - INFO -   Rango normal: [-0.38 - 7.63]
2025-01-06 13:59:57,226 - INFO -   Valores extremos: [7.64 - 16.05]
2025-01-06 13:59:57,226 - INFO - Dataset cargado: (5110, 12)
2025-01-06 13:59:57,227 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 13:59:57,227 - INFO - 
Distribución de clases:
2025-01-06 13:59:57,227 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 13:59:57,227 - INFO - Stroke: 249 (4.87%)
2025-01-06 13:59:57,228 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 13:59:57,229 - INFO - 
Valores faltantes por columna:
2025-01-06 13:59:57,229 - INFO - bmi: 201 (3.93%)
2025-01-06 13:59:57,229 - INFO - glucose_bmi_ratio: 201 (3.93%)
2025-01-06 13:59:57,230 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 13:59:57,231 - INFO - 
age:
2025-01-06 13:59:57,231 - INFO -   Media: 43.23
2025-01-06 13:59:57,231 - INFO -   Mediana: 45.00
2025-01-06 13:59:57,231 - INFO -   Std: 22.61
2025-01-06 13:59:57,231 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 13:59:57,233 - INFO - 
avg_glucose_level:
2025-01-06 13:59:57,233 - INFO -   Media: 106.15
2025-01-06 13:59:57,233 - INFO -   Mediana: 91.88
2025-01-06 13:59:57,233 - INFO -   Std: 45.28
2025-01-06 13:59:57,233 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 13:59:57,234 - INFO - 
bmi:
2025-01-06 13:59:57,235 - INFO -   Media: 28.89
2025-01-06 13:59:57,235 - INFO -   Mediana: 28.10
2025-01-06 13:59:57,235 - INFO -   Std: 7.85
2025-01-06 13:59:57,235 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 13:59:57,235 - INFO - 
=== Información de Outliers ===
2025-01-06 13:59:57,237 - INFO - 
avg_glucose_level:
2025-01-06 13:59:57,237 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 13:59:57,238 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 13:59:57,238 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 13:59:57,239 - INFO - 
bmi:
2025-01-06 13:59:57,239 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 13:59:57,239 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 13:59:57,240 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 13:59:57,433 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:59:57,438 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:59:57,458 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:59:57,463 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 13:59:58,067 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 13:59:58,068 - INFO - 
Entrenando LDA...
2025-01-06 14:00:04,933 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:00:04,934 - INFO - ROC AUC: 0.819 (±0.016)
2025-01-06 14:00:04,934 - INFO - Precision: 0.083 (±0.002)
2025-01-06 14:00:04,934 - INFO - Recall: 0.965 (±0.030)
2025-01-06 14:00:04,934 - INFO - F1: 0.153 (±0.004)
2025-01-06 14:00:04,935 - INFO - LDA - Resultados:
2025-01-06 14:00:04,935 - INFO - ROC AUC: 0.819 (±0.016)
2025-01-06 14:00:04,935 - INFO - Precision: 0.083 (±0.002)
2025-01-06 14:00:04,935 - INFO - Recall: 0.965 (±0.030)
2025-01-06 14:00:04,935 - INFO - F1: 0.153 (±0.004)
2025-01-06 14:00:04,935 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:00:07,214 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:00:07,215 - INFO - ROC AUC: 0.836 (±0.015)
2025-01-06 14:00:07,215 - INFO - Precision: 0.132 (±0.009)
2025-01-06 14:00:07,215 - INFO - Recall: 0.796 (±0.049)
2025-01-06 14:00:07,215 - INFO - F1: 0.226 (±0.015)
2025-01-06 14:00:07,216 - INFO - Logistic Regression - Resultados:
2025-01-06 14:00:07,216 - INFO - ROC AUC: 0.836 (±0.015)
2025-01-06 14:00:07,216 - INFO - Precision: 0.132 (±0.009)
2025-01-06 14:00:07,216 - INFO - Recall: 0.796 (±0.049)
2025-01-06 14:00:07,216 - INFO - F1: 0.226 (±0.015)
2025-01-06 14:00:07,216 - INFO - 
Entrenando Random Forest...
2025-01-06 14:02:07,109 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:02:07,124 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:02:07,124 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:02:07,124 - INFO - 
Distribución de clases:
2025-01-06 14:02:07,125 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:02:07,125 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:02:07,125 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:02:07,126 - INFO - 
Valores faltantes por columna:
2025-01-06 14:02:07,126 - INFO - bmi: 201 (3.93%)
2025-01-06 14:02:07,126 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:02:07,127 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:02:07,127 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:02:07,128 - INFO - 
age:
2025-01-06 14:02:07,128 - INFO -   Media: 43.23
2025-01-06 14:02:07,128 - INFO -   Mediana: 45.00
2025-01-06 14:02:07,128 - INFO -   Std: 22.61
2025-01-06 14:02:07,128 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:02:07,129 - INFO - 
avg_glucose_level:
2025-01-06 14:02:07,129 - INFO -   Media: 101.00
2025-01-06 14:02:07,129 - INFO -   Mediana: 91.88
2025-01-06 14:02:07,129 - INFO -   Std: 33.21
2025-01-06 14:02:07,130 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:02:07,131 - INFO - 
bmi:
2025-01-06 14:02:07,131 - INFO -   Media: 28.74
2025-01-06 14:02:07,131 - INFO -   Mediana: 28.10
2025-01-06 14:02:07,131 - INFO -   Std: 7.34
2025-01-06 14:02:07,132 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:02:07,132 - INFO - 
=== Información de Outliers ===
2025-01-06 14:02:07,329 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:02:07,334 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:02:07,354 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:02:07,360 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:02:07,977 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:02:07,978 - INFO - 
Entrenando LDA...
2025-01-06 14:02:16,115 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:02:16,116 - INFO - ROC AUC: 0.820 (±0.018)
2025-01-06 14:02:16,116 - INFO - Precision: 0.084 (±0.002)
2025-01-06 14:02:16,117 - INFO - Recall: 0.965 (±0.020)
2025-01-06 14:02:16,117 - INFO - F1: 0.155 (±0.004)
2025-01-06 14:02:16,117 - INFO - LDA - Resultados:
2025-01-06 14:02:16,117 - INFO - ROC AUC: 0.820 (±0.018)
2025-01-06 14:02:16,118 - INFO - Precision: 0.084 (±0.002)
2025-01-06 14:02:16,118 - INFO - Recall: 0.965 (±0.020)
2025-01-06 14:02:16,118 - INFO - F1: 0.155 (±0.004)
2025-01-06 14:02:16,118 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:02:19,867 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:02:19,868 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:02:19,868 - INFO - Precision: 0.133 (±0.007)
2025-01-06 14:02:19,869 - INFO - Recall: 0.803 (±0.055)
2025-01-06 14:02:19,869 - INFO - F1: 0.228 (±0.013)
2025-01-06 14:02:19,869 - INFO - Logistic Regression - Resultados:
2025-01-06 14:02:19,869 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:02:19,869 - INFO - Precision: 0.133 (±0.007)
2025-01-06 14:02:19,869 - INFO - Recall: 0.803 (±0.055)
2025-01-06 14:02:19,870 - INFO - F1: 0.228 (±0.013)
2025-01-06 14:02:19,870 - INFO - 
Entrenando Random Forest...
2025-01-06 14:02:43,288 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:02:43,288 - INFO - ROC AUC: 0.831 (±0.017)
2025-01-06 14:02:43,289 - INFO - Precision: 0.173 (±0.024)
2025-01-06 14:02:43,289 - INFO - Recall: 0.571 (±0.070)
2025-01-06 14:02:43,289 - INFO - F1: 0.265 (±0.035)
2025-01-06 14:02:43,289 - INFO - Random Forest - Resultados:
2025-01-06 14:02:43,290 - INFO - ROC AUC: 0.831 (±0.017)
2025-01-06 14:02:43,290 - INFO - Precision: 0.173 (±0.024)
2025-01-06 14:02:43,290 - INFO - Recall: 0.571 (±0.070)
2025-01-06 14:02:43,290 - INFO - F1: 0.265 (±0.035)
2025-01-06 14:02:43,399 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:02:43,400 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:02:43,400 - INFO - ROC AUC Score: 0.845 (±0.016)
2025-01-06 14:02:43,795 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:02:43,796 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:02:43,831 - INFO - 
Informe de Clasificación:
2025-01-06 14:02:43,838 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.74      0.85       972
           1       0.14      0.80      0.24        50

    accuracy                           0.75      1022
   macro avg       0.56      0.77      0.54      1022
weighted avg       0.94      0.75      0.82      1022

2025-01-06 14:02:43,840 - INFO - 
Matriz de Confusión:
2025-01-06 14:02:43,841 - INFO - 
[[TN=723 FP=249]
2025-01-06 14:02:43,841 - INFO -  [FN=10 TP=40]]
2025-01-06 14:02:43,841 - INFO - 
Métricas Detalladas:
2025-01-06 14:02:43,842 - INFO - Precision: 0.138
2025-01-06 14:02:43,842 - INFO - Recall (Sensibilidad): 0.800
2025-01-06 14:02:43,842 - INFO - Especificidad: 0.744
2025-01-06 14:02:43,844 - INFO - Average Precision Score: 0.250
2025-01-06 14:02:43,844 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 14:02:43,850 - ERROR - Error guardando artefactos del modelo: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 14:02:43,851 - INFO - 
Entrenamiento completado en 0:00:36.741882
2025-01-06 14:04:32,965 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:04:32,981 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:04:32,981 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:04:32,981 - INFO - 
Distribución de clases:
2025-01-06 14:04:32,981 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:04:32,982 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:04:32,982 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:04:32,983 - INFO - 
Valores faltantes por columna:
2025-01-06 14:04:32,983 - INFO - bmi: 201 (3.93%)
2025-01-06 14:04:32,983 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:04:32,983 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:04:32,983 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:04:32,984 - INFO - 
age:
2025-01-06 14:04:32,985 - INFO -   Media: 43.23
2025-01-06 14:04:32,985 - INFO -   Mediana: 45.00
2025-01-06 14:04:32,985 - INFO -   Std: 22.61
2025-01-06 14:04:32,985 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:04:32,986 - INFO - 
avg_glucose_level:
2025-01-06 14:04:32,986 - INFO -   Media: 101.00
2025-01-06 14:04:32,986 - INFO -   Mediana: 91.88
2025-01-06 14:04:32,986 - INFO -   Std: 33.21
2025-01-06 14:04:32,986 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:04:32,987 - INFO - 
bmi:
2025-01-06 14:04:32,987 - INFO -   Media: 28.74
2025-01-06 14:04:32,987 - INFO -   Mediana: 28.10
2025-01-06 14:04:32,988 - INFO -   Std: 7.34
2025-01-06 14:04:32,988 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:04:32,988 - INFO - 
=== Información de Outliers ===
2025-01-06 14:04:33,208 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:04:33,213 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:04:33,234 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:04:33,240 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:04:33,911 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:04:33,911 - INFO - 
Entrenando LDA...
2025-01-06 14:04:40,254 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:04:40,255 - INFO - ROC AUC: 0.838 (±0.016)
2025-01-06 14:04:40,255 - INFO - Precision: 0.089 (±0.006)
2025-01-06 14:04:40,255 - INFO - Recall: 0.946 (±0.035)
2025-01-06 14:04:40,255 - INFO - F1: 0.163 (±0.009)
2025-01-06 14:04:40,256 - INFO - LDA - Resultados:
2025-01-06 14:04:40,256 - INFO - ROC AUC: 0.838 (±0.016)
2025-01-06 14:04:40,256 - INFO - Precision: 0.089 (±0.006)
2025-01-06 14:04:40,256 - INFO - Recall: 0.946 (±0.035)
2025-01-06 14:04:40,256 - INFO - F1: 0.163 (±0.009)
2025-01-06 14:04:40,256 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:04:43,829 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:04:43,829 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:04:43,829 - INFO - Precision: 0.137 (±0.007)
2025-01-06 14:04:43,830 - INFO - Recall: 0.783 (±0.052)
2025-01-06 14:04:43,830 - INFO - F1: 0.233 (±0.012)
2025-01-06 14:04:43,830 - INFO - Logistic Regression - Resultados:
2025-01-06 14:04:43,830 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:04:43,830 - INFO - Precision: 0.137 (±0.007)
2025-01-06 14:04:43,830 - INFO - Recall: 0.783 (±0.052)
2025-01-06 14:04:43,831 - INFO - F1: 0.233 (±0.012)
2025-01-06 14:04:43,831 - INFO - 
Entrenando Random Forest...
2025-01-06 14:05:08,549 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:05:08,549 - INFO - ROC AUC: 0.835 (±0.017)
2025-01-06 14:05:08,550 - INFO - Precision: 0.161 (±0.012)
2025-01-06 14:05:08,550 - INFO - Recall: 0.675 (±0.059)
2025-01-06 14:05:08,550 - INFO - F1: 0.259 (±0.020)
2025-01-06 14:05:08,550 - INFO - Random Forest - Resultados:
2025-01-06 14:05:08,550 - INFO - ROC AUC: 0.835 (±0.017)
2025-01-06 14:05:08,551 - INFO - Precision: 0.161 (±0.012)
2025-01-06 14:05:08,551 - INFO - Recall: 0.675 (±0.059)
2025-01-06 14:05:08,551 - INFO - F1: 0.259 (±0.020)
2025-01-06 14:05:08,654 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:05:08,655 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:05:08,655 - INFO - ROC AUC Score: 0.845 (±0.016)
2025-01-06 14:05:09,022 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:05:09,022 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:05:09,049 - INFO - 
Informe de Clasificación:
2025-01-06 14:05:09,054 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.76      0.86       972
           1       0.15      0.80      0.25        50

    accuracy                           0.76      1022
   macro avg       0.57      0.78      0.55      1022
weighted avg       0.95      0.76      0.83      1022

2025-01-06 14:05:09,056 - INFO - 
Matriz de Confusión:
2025-01-06 14:05:09,056 - INFO - 
[[TN=739 FP=233]
2025-01-06 14:05:09,056 - INFO -  [FN=10 TP=40]]
2025-01-06 14:05:09,056 - INFO - 
Métricas Detalladas:
2025-01-06 14:05:09,057 - INFO - Precision: 0.147
2025-01-06 14:05:09,057 - INFO - Recall (Sensibilidad): 0.800
2025-01-06 14:05:09,057 - INFO - Especificidad: 0.760
2025-01-06 14:05:09,058 - INFO - Average Precision Score: 0.239
2025-01-06 14:05:09,058 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 14:05:09,062 - ERROR - Error guardando artefactos del modelo: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 14:05:09,062 - INFO - 
Entrenamiento completado en 0:00:36.097036
2025-01-06 14:09:48,976 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:09:48,998 - INFO - Dataset cargado: (5110, 26)
2025-01-06 14:09:48,998 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:09:48,999 - INFO - 
Distribución de clases:
2025-01-06 14:09:48,999 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:09:48,999 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:09:48,999 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:09:49,001 - INFO - 
Valores faltantes por columna:
2025-01-06 14:09:49,001 - INFO - bmi: 201 (3.93%)
2025-01-06 14:09:49,001 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:09:49,001 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:09:49,002 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:09:49,003 - INFO - 
age:
2025-01-06 14:09:49,003 - INFO -   Media: 43.23
2025-01-06 14:09:49,003 - INFO -   Mediana: 45.00
2025-01-06 14:09:49,003 - INFO -   Std: 22.61
2025-01-06 14:09:49,003 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:09:49,004 - INFO - 
avg_glucose_level:
2025-01-06 14:09:49,005 - INFO -   Media: 106.15
2025-01-06 14:09:49,005 - INFO -   Mediana: 91.88
2025-01-06 14:09:49,005 - INFO -   Std: 45.28
2025-01-06 14:09:49,005 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 14:09:49,007 - INFO - 
bmi:
2025-01-06 14:09:49,007 - INFO -   Media: 28.89
2025-01-06 14:09:49,007 - INFO -   Mediana: 28.10
2025-01-06 14:09:49,007 - INFO -   Std: 7.85
2025-01-06 14:09:49,007 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 14:09:49,007 - INFO - 
=== Información de Outliers ===
2025-01-06 14:09:49,010 - INFO - 
avg_glucose_level:
2025-01-06 14:09:49,010 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 14:09:49,010 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 14:09:49,011 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 14:09:49,012 - INFO - 
bmi:
2025-01-06 14:09:49,012 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 14:09:49,012 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 14:09:49,013 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 14:09:49,212 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:09:49,216 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:09:49,237 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:09:49,242 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:09:49,858 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:09:49,859 - INFO - 
Entrenando LDA...
2025-01-06 14:09:56,211 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:09:56,211 - INFO - ROC AUC: 0.841 (±0.019)
2025-01-06 14:09:56,211 - INFO - Precision: 0.094 (±0.005)
2025-01-06 14:09:56,212 - INFO - Recall: 0.933 (±0.034)
2025-01-06 14:09:56,212 - INFO - F1: 0.172 (±0.008)
2025-01-06 14:09:56,212 - INFO - LDA - Resultados:
2025-01-06 14:09:56,212 - INFO - ROC AUC: 0.841 (±0.019)
2025-01-06 14:09:56,212 - INFO - Precision: 0.094 (±0.005)
2025-01-06 14:09:56,212 - INFO - Recall: 0.933 (±0.034)
2025-01-06 14:09:56,213 - INFO - F1: 0.172 (±0.008)
2025-01-06 14:09:56,213 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:10:00,782 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:10:00,782 - INFO - ROC AUC: 0.843 (±0.019)
2025-01-06 14:10:00,783 - INFO - Precision: 0.149 (±0.009)
2025-01-06 14:10:00,783 - INFO - Recall: 0.755 (±0.050)
2025-01-06 14:10:00,783 - INFO - F1: 0.248 (±0.015)
2025-01-06 14:10:00,784 - INFO - Logistic Regression - Resultados:
2025-01-06 14:10:00,784 - INFO - ROC AUC: 0.843 (±0.019)
2025-01-06 14:10:00,784 - INFO - Precision: 0.149 (±0.009)
2025-01-06 14:10:00,784 - INFO - Recall: 0.755 (±0.050)
2025-01-06 14:10:00,784 - INFO - F1: 0.248 (±0.015)
2025-01-06 14:10:00,785 - INFO - 
Entrenando Random Forest...
2025-01-06 14:10:35,089 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:10:35,089 - INFO - ROC AUC: 0.833 (±0.018)
2025-01-06 14:10:35,090 - INFO - Precision: 0.181 (±0.023)
2025-01-06 14:10:35,090 - INFO - Recall: 0.497 (±0.053)
2025-01-06 14:10:35,090 - INFO - F1: 0.265 (±0.029)
2025-01-06 14:10:35,090 - INFO - Random Forest - Resultados:
2025-01-06 14:10:35,090 - INFO - ROC AUC: 0.833 (±0.018)
2025-01-06 14:10:35,090 - INFO - Precision: 0.181 (±0.023)
2025-01-06 14:10:35,091 - INFO - Recall: 0.497 (±0.053)
2025-01-06 14:10:35,091 - INFO - F1: 0.265 (±0.029)
2025-01-06 14:10:35,192 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:10:35,193 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:10:35,193 - INFO - ROC AUC Score: 0.843 (±0.019)
2025-01-06 14:10:35,684 - WARNING - Desajuste en características: 0 nombres vs 38 importancias
2025-01-06 14:10:35,685 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:10:35,712 - INFO - 
Informe de Clasificación:
2025-01-06 14:10:35,717 - INFO - 
              precision    recall  f1-score   support

           0       0.98      0.78      0.87       972
           1       0.15      0.76      0.26        50

    accuracy                           0.78      1022
   macro avg       0.57      0.77      0.56      1022
weighted avg       0.94      0.78      0.84      1022

2025-01-06 14:10:35,718 - INFO - 
Matriz de Confusión:
2025-01-06 14:10:35,719 - INFO - 
[[TN=762 FP=210]
2025-01-06 14:10:35,719 - INFO -  [FN=12 TP=38]]
2025-01-06 14:10:35,719 - INFO - 
Métricas Detalladas:
2025-01-06 14:10:35,719 - INFO - Precision: 0.153
2025-01-06 14:10:35,720 - INFO - Recall (Sensibilidad): 0.760
2025-01-06 14:10:35,720 - INFO - Especificidad: 0.784
2025-01-06 14:10:35,721 - INFO - Average Precision Score: 0.230
2025-01-06 14:10:35,721 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 14:10:35,726 - ERROR - Error guardando artefactos del modelo: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 14:10:35,727 - INFO - 
Entrenamiento completado en 0:00:46.750020
2025-01-06 14:13:35,014 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:13:35,032 - INFO - Dataset cargado: (5110, 18)
2025-01-06 14:13:35,032 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:13:35,032 - INFO - 
Distribución de clases:
2025-01-06 14:13:35,033 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:13:35,033 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:13:35,033 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:13:35,034 - INFO - 
Valores faltantes por columna:
2025-01-06 14:13:35,034 - INFO - bmi: 201 (3.93%)
2025-01-06 14:13:35,034 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:13:35,035 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:13:35,035 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:13:35,036 - INFO - 
age:
2025-01-06 14:13:35,036 - INFO -   Media: 43.23
2025-01-06 14:13:35,036 - INFO -   Mediana: 45.00
2025-01-06 14:13:35,036 - INFO -   Std: 22.61
2025-01-06 14:13:35,036 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:13:35,037 - INFO - 
avg_glucose_level:
2025-01-06 14:13:35,038 - INFO -   Media: 106.15
2025-01-06 14:13:35,038 - INFO -   Mediana: 91.88
2025-01-06 14:13:35,038 - INFO -   Std: 45.28
2025-01-06 14:13:35,038 - INFO -   Rango: [55.12 - 271.74]
2025-01-06 14:13:35,039 - INFO - 
bmi:
2025-01-06 14:13:35,040 - INFO -   Media: 28.89
2025-01-06 14:13:35,040 - INFO -   Mediana: 28.10
2025-01-06 14:13:35,040 - INFO -   Std: 7.85
2025-01-06 14:13:35,040 - INFO -   Rango: [10.30 - 97.60]
2025-01-06 14:13:35,040 - INFO - 
=== Información de Outliers ===
2025-01-06 14:13:35,043 - INFO - 
avg_glucose_level:
2025-01-06 14:13:35,043 - INFO -   Outliers detectados: 627 (12.27%)
2025-01-06 14:13:35,043 - INFO -   Rango normal: [21.98 - 169.36]
2025-01-06 14:13:35,043 - INFO -   Valores extremos: [169.43 - 271.74]
2025-01-06 14:13:35,045 - INFO - 
bmi:
2025-01-06 14:13:35,045 - INFO -   Outliers detectados: 110 (2.15%)
2025-01-06 14:13:35,045 - INFO -   Rango normal: [9.10 - 47.50]
2025-01-06 14:13:35,045 - INFO -   Valores extremos: [47.60 - 97.60]
2025-01-06 14:13:35,245 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:13:35,251 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:13:35,270 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:13:35,276 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:13:35,883 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:13:35,883 - INFO - 
Entrenando LDA...
2025-01-06 14:13:38,922 - ERROR - Error evaluando LDA: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3805, in get_loc
    return self._engine.get_loc(casted_key)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "index.pyx", line 167, in pandas._libs.index.IndexEngine.get_loc
  File "index.pyx", line 196, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\\_libs\\hashtable_class_helper.pxi", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\\_libs\\hashtable_class_helper.pxi", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'age_hypertension'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_indexing.py", line 364, in _get_column_indices
    col_idx = all_columns.get_loc(col)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3812, in get_loc
    raise KeyError(key) from err
KeyError: 'age_hypertension'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 992, in fit_transform
    self._validate_column_callables(X)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 551, in _validate_column_callables
    transformer_to_input_indices[name] = _get_column_indices(X, columns)
                                         ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_indexing.py", line 372, in _get_column_indices
    raise ValueError("A given column is not a column of the dataframe") from e
ValueError: A given column is not a column of the dataframe

2025-01-06 14:13:38,926 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:13:39,990 - ERROR - Error evaluando Logistic Regression: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3805, in get_loc
    return self._engine.get_loc(casted_key)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "index.pyx", line 167, in pandas._libs.index.IndexEngine.get_loc
  File "index.pyx", line 196, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\\_libs\\hashtable_class_helper.pxi", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\\_libs\\hashtable_class_helper.pxi", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'age_hypertension'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_indexing.py", line 364, in _get_column_indices
    col_idx = all_columns.get_loc(col)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3812, in get_loc
    raise KeyError(key) from err
KeyError: 'age_hypertension'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 992, in fit_transform
    self._validate_column_callables(X)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 551, in _validate_column_callables
    transformer_to_input_indices[name] = _get_column_indices(X, columns)
                                         ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_indexing.py", line 372, in _get_column_indices
    raise ValueError("A given column is not a column of the dataframe") from e
ValueError: A given column is not a column of the dataframe

2025-01-06 14:13:39,995 - INFO - 
Entrenando Random Forest...
2025-01-06 14:13:40,062 - ERROR - Error evaluando Random Forest: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
15 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3805, in get_loc
    return self._engine.get_loc(casted_key)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "index.pyx", line 167, in pandas._libs.index.IndexEngine.get_loc
  File "index.pyx", line 196, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\\_libs\\hashtable_class_helper.pxi", line 7081, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\\_libs\\hashtable_class_helper.pxi", line 7089, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'age_hypertension'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_indexing.py", line 364, in _get_column_indices
    col_idx = all_columns.get_loc(col)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3812, in get_loc
    raise KeyError(key) from err
KeyError: 'age_hypertension'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 430, in _fit
    X, fitted_transformer = fit_transform_one_cached(
                            ~~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        params=step_params,
        ^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1383, in _fit_transform_one
    res = transformer.fit_transform(X, y, **params.get("fit_transform", {}))
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_set_output.py", line 319, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 992, in fit_transform
    self._validate_column_callables(X)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\compose\_column_transformer.py", line 551, in _validate_column_callables
    transformer_to_input_indices[name] = _get_column_indices(X, columns)
                                         ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_indexing.py", line 372, in _get_column_indices
    raise ValueError("A given column is not a column of the dataframe") from e
ValueError: A given column is not a column of the dataframe

2025-01-06 14:13:40,200 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:13:40,200 - ERROR - Error durante el entrenamiento: No hay resultados de modelos para comparar
2025-01-06 14:14:37,567 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:14:37,583 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:14:37,583 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:14:37,583 - INFO - 
Distribución de clases:
2025-01-06 14:14:37,584 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:14:37,584 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:14:37,584 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:14:37,585 - INFO - 
Valores faltantes por columna:
2025-01-06 14:14:37,586 - INFO - bmi: 201 (3.93%)
2025-01-06 14:14:37,586 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:14:37,586 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:14:37,586 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:14:37,587 - INFO - 
age:
2025-01-06 14:14:37,587 - INFO -   Media: 43.23
2025-01-06 14:14:37,587 - INFO -   Mediana: 45.00
2025-01-06 14:14:37,587 - INFO -   Std: 22.61
2025-01-06 14:14:37,588 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:14:37,589 - INFO - 
avg_glucose_level:
2025-01-06 14:14:37,589 - INFO -   Media: 101.00
2025-01-06 14:14:37,589 - INFO -   Mediana: 91.88
2025-01-06 14:14:37,589 - INFO -   Std: 33.21
2025-01-06 14:14:37,589 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:14:37,590 - INFO - 
bmi:
2025-01-06 14:14:37,590 - INFO -   Media: 28.74
2025-01-06 14:14:37,591 - INFO -   Mediana: 28.10
2025-01-06 14:14:37,591 - INFO -   Std: 7.34
2025-01-06 14:14:37,591 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:14:37,591 - INFO - 
=== Información de Outliers ===
2025-01-06 14:14:37,799 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:14:37,806 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:14:37,828 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:14:37,834 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:14:38,511 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:14:38,511 - INFO - 
Entrenando LDA...
2025-01-06 14:14:45,161 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:14:45,162 - INFO - ROC AUC: 0.838 (±0.016)
2025-01-06 14:14:45,162 - INFO - Precision: 0.089 (±0.006)
2025-01-06 14:14:45,162 - INFO - Recall: 0.946 (±0.035)
2025-01-06 14:14:45,162 - INFO - F1: 0.163 (±0.009)
2025-01-06 14:14:45,163 - INFO - LDA - Resultados:
2025-01-06 14:14:45,163 - INFO - ROC AUC: 0.838 (±0.016)
2025-01-06 14:14:45,163 - INFO - Precision: 0.089 (±0.006)
2025-01-06 14:14:45,163 - INFO - Recall: 0.946 (±0.035)
2025-01-06 14:14:45,163 - INFO - F1: 0.163 (±0.009)
2025-01-06 14:14:45,163 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:14:49,095 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:14:49,095 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:14:49,095 - INFO - Precision: 0.137 (±0.007)
2025-01-06 14:14:49,096 - INFO - Recall: 0.783 (±0.052)
2025-01-06 14:14:49,096 - INFO - F1: 0.233 (±0.012)
2025-01-06 14:14:49,096 - INFO - Logistic Regression - Resultados:
2025-01-06 14:14:49,096 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:14:49,096 - INFO - Precision: 0.137 (±0.007)
2025-01-06 14:14:49,096 - INFO - Recall: 0.783 (±0.052)
2025-01-06 14:14:49,097 - INFO - F1: 0.233 (±0.012)
2025-01-06 14:14:49,097 - INFO - 
Entrenando Random Forest...
2025-01-06 14:15:13,277 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:15:13,277 - INFO - ROC AUC: 0.835 (±0.017)
2025-01-06 14:15:13,277 - INFO - Precision: 0.161 (±0.012)
2025-01-06 14:15:13,277 - INFO - Recall: 0.675 (±0.059)
2025-01-06 14:15:13,278 - INFO - F1: 0.259 (±0.020)
2025-01-06 14:15:13,278 - INFO - Random Forest - Resultados:
2025-01-06 14:15:13,278 - INFO - ROC AUC: 0.835 (±0.017)
2025-01-06 14:15:13,278 - INFO - Precision: 0.161 (±0.012)
2025-01-06 14:15:13,278 - INFO - Recall: 0.675 (±0.059)
2025-01-06 14:15:13,278 - INFO - F1: 0.259 (±0.020)
2025-01-06 14:15:13,378 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:15:13,378 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:15:13,378 - INFO - ROC AUC Score: 0.845 (±0.016)
2025-01-06 14:15:13,755 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:15:13,755 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:15:13,782 - INFO - 
Informe de Clasificación:
2025-01-06 14:15:13,786 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.76      0.86       972
           1       0.15      0.80      0.25        50

    accuracy                           0.76      1022
   macro avg       0.57      0.78      0.55      1022
weighted avg       0.95      0.76      0.83      1022

2025-01-06 14:15:13,788 - INFO - 
Matriz de Confusión:
2025-01-06 14:15:13,788 - INFO - 
[[TN=739 FP=233]
2025-01-06 14:15:13,788 - INFO -  [FN=10 TP=40]]
2025-01-06 14:15:13,788 - INFO - 
Métricas Detalladas:
2025-01-06 14:15:13,788 - INFO - Precision: 0.147
2025-01-06 14:15:13,789 - INFO - Recall (Sensibilidad): 0.800
2025-01-06 14:15:13,789 - INFO - Especificidad: 0.760
2025-01-06 14:15:13,790 - INFO - Average Precision Score: 0.239
2025-01-06 14:15:13,790 - ERROR - Error en el análisis del modelo: name 'self' is not defined
2025-01-06 14:15:13,795 - ERROR - Error guardando artefactos del modelo: unsupported operand type(s) for /: 'dict' and 'int'
2025-01-06 14:15:13,795 - INFO - 
Entrenamiento completado en 0:00:36.227401
2025-01-06 14:19:08,398 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:19:08,413 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:19:08,413 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:19:08,414 - INFO - 
Distribución de clases:
2025-01-06 14:19:08,414 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:19:08,414 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:19:08,414 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:19:08,415 - INFO - 
Valores faltantes por columna:
2025-01-06 14:19:08,415 - INFO - bmi: 201 (3.93%)
2025-01-06 14:19:08,416 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:19:08,416 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:19:08,416 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:19:08,417 - INFO - 
age:
2025-01-06 14:19:08,417 - INFO -   Media: 43.23
2025-01-06 14:19:08,417 - INFO -   Mediana: 45.00
2025-01-06 14:19:08,417 - INFO -   Std: 22.61
2025-01-06 14:19:08,418 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:19:08,419 - INFO - 
avg_glucose_level:
2025-01-06 14:19:08,419 - INFO -   Media: 101.00
2025-01-06 14:19:08,419 - INFO -   Mediana: 91.88
2025-01-06 14:19:08,419 - INFO -   Std: 33.21
2025-01-06 14:19:08,419 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:19:08,420 - INFO - 
bmi:
2025-01-06 14:19:08,421 - INFO -   Media: 28.74
2025-01-06 14:19:08,421 - INFO -   Mediana: 28.10
2025-01-06 14:19:08,421 - INFO -   Std: 7.34
2025-01-06 14:19:08,421 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:19:08,421 - INFO - 
=== Información de Outliers ===
2025-01-06 14:19:08,658 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:19:08,663 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:19:08,682 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:19:08,687 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:19:09,335 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:19:09,335 - INFO - 
Entrenando LDA...
2025-01-06 14:19:16,154 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:19:16,154 - INFO - ROC AUC: 0.842 (±0.016)
2025-01-06 14:19:16,154 - INFO - Precision: 0.094 (±0.006)
2025-01-06 14:19:16,155 - INFO - Recall: 0.937 (±0.035)
2025-01-06 14:19:16,155 - INFO - F1: 0.171 (±0.010)
2025-01-06 14:19:16,155 - INFO - LDA - Resultados:
2025-01-06 14:19:16,155 - INFO - ROC AUC: 0.842 (±0.016)
2025-01-06 14:19:16,155 - INFO - Precision: 0.094 (±0.006)
2025-01-06 14:19:16,155 - INFO - Recall: 0.937 (±0.035)
2025-01-06 14:19:16,156 - INFO - F1: 0.171 (±0.010)
2025-01-06 14:19:16,156 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:19:19,259 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:19:19,259 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:19:19,259 - INFO - Precision: 0.122 (±0.006)
2025-01-06 14:19:19,259 - INFO - Recall: 0.837 (±0.052)
2025-01-06 14:19:19,260 - INFO - F1: 0.213 (±0.010)
2025-01-06 14:19:19,260 - INFO - Logistic Regression - Resultados:
2025-01-06 14:19:19,260 - INFO - ROC AUC: 0.845 (±0.016)
2025-01-06 14:19:19,260 - INFO - Precision: 0.122 (±0.006)
2025-01-06 14:19:19,260 - INFO - Recall: 0.837 (±0.052)
2025-01-06 14:19:19,260 - INFO - F1: 0.213 (±0.010)
2025-01-06 14:19:19,260 - INFO - 
Entrenando Random Forest...
2025-01-06 14:19:46,337 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:19:46,338 - INFO - ROC AUC: 0.832 (±0.017)
2025-01-06 14:19:46,338 - INFO - Precision: 0.151 (±0.010)
2025-01-06 14:19:46,338 - INFO - Recall: 0.701 (±0.057)
2025-01-06 14:19:46,338 - INFO - F1: 0.248 (±0.016)
2025-01-06 14:19:46,338 - INFO - Random Forest - Resultados:
2025-01-06 14:19:46,339 - INFO - ROC AUC: 0.832 (±0.017)
2025-01-06 14:19:46,339 - INFO - Precision: 0.151 (±0.010)
2025-01-06 14:19:46,339 - INFO - Recall: 0.701 (±0.057)
2025-01-06 14:19:46,339 - INFO - F1: 0.248 (±0.016)
2025-01-06 14:19:46,441 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:19:46,441 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:19:46,441 - INFO - ROC AUC Score: 0.845 (±0.016)
2025-01-06 14:19:46,766 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:19:46,766 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:19:46,795 - INFO - 
Informe de Clasificación:
2025-01-06 14:19:46,800 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.70      0.82       972
           1       0.13      0.84      0.22        50

    accuracy                           0.71      1022
   macro avg       0.56      0.77      0.52      1022
weighted avg       0.95      0.71      0.79      1022

2025-01-06 14:19:46,802 - INFO - 
Matriz de Confusión:
2025-01-06 14:19:46,802 - INFO - 
[[TN=679 FP=293]
2025-01-06 14:19:46,803 - INFO -  [FN=8 TP=42]]
2025-01-06 14:19:46,803 - INFO - 
Métricas Detalladas:
2025-01-06 14:19:46,803 - INFO - Precision: 0.125
2025-01-06 14:19:46,803 - INFO - Recall (Sensibilidad): 0.840
2025-01-06 14:19:46,803 - INFO - Especificidad: 0.699
2025-01-06 14:19:46,804 - INFO - Average Precision Score: 0.239
2025-01-06 14:19:47,084 - INFO - Análisis del modelo completado exitosamente
2025-01-06 14:19:47,088 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 14:19:47,088 - INFO - 
Entrenamiento completado en 0:00:38.689745
2025-01-06 14:22:34,357 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:22:34,372 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:22:34,372 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:22:34,372 - INFO - 
Distribución de clases:
2025-01-06 14:22:34,372 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:22:34,373 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:22:34,373 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:22:34,374 - INFO - 
Valores faltantes por columna:
2025-01-06 14:22:34,374 - INFO - bmi: 201 (3.93%)
2025-01-06 14:22:34,374 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:22:34,374 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:22:34,374 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:22:34,375 - INFO - 
age:
2025-01-06 14:22:34,375 - INFO -   Media: 43.23
2025-01-06 14:22:34,376 - INFO -   Mediana: 45.00
2025-01-06 14:22:34,376 - INFO -   Std: 22.61
2025-01-06 14:22:34,376 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:22:34,377 - INFO - 
avg_glucose_level:
2025-01-06 14:22:34,377 - INFO -   Media: 101.00
2025-01-06 14:22:34,378 - INFO -   Mediana: 91.88
2025-01-06 14:22:34,378 - INFO -   Std: 33.21
2025-01-06 14:22:34,378 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:22:34,379 - INFO - 
bmi:
2025-01-06 14:22:34,379 - INFO -   Media: 28.74
2025-01-06 14:22:34,379 - INFO -   Mediana: 28.10
2025-01-06 14:22:34,379 - INFO -   Std: 7.34
2025-01-06 14:22:34,380 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:22:34,380 - INFO - 
=== Información de Outliers ===
2025-01-06 14:22:34,573 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:22:34,578 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:22:34,599 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:22:34,605 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:22:35,226 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:22:35,227 - INFO - 
Entrenando LDA...
2025-01-06 14:22:41,448 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:22:41,449 - INFO - ROC AUC: 0.844 (±0.018)
2025-01-06 14:22:41,449 - INFO - Precision: 0.100 (±0.004)
2025-01-06 14:22:41,449 - INFO - Recall: 0.922 (±0.027)
2025-01-06 14:22:41,449 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:22:41,449 - INFO - LDA - Resultados:
2025-01-06 14:22:41,450 - INFO - ROC AUC: 0.844 (±0.018)
2025-01-06 14:22:41,450 - INFO - Precision: 0.100 (±0.004)
2025-01-06 14:22:41,450 - INFO - Recall: 0.922 (±0.027)
2025-01-06 14:22:41,450 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:22:41,450 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:22:44,450 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:22:44,450 - INFO - ROC AUC: 0.846 (±0.017)
2025-01-06 14:22:44,450 - INFO - Precision: 0.142 (±0.010)
2025-01-06 14:22:44,450 - INFO - Recall: 0.774 (±0.056)
2025-01-06 14:22:44,451 - INFO - F1: 0.240 (±0.016)
2025-01-06 14:22:44,451 - INFO - Logistic Regression - Resultados:
2025-01-06 14:22:44,451 - INFO - ROC AUC: 0.846 (±0.017)
2025-01-06 14:22:44,451 - INFO - Precision: 0.142 (±0.010)
2025-01-06 14:22:44,451 - INFO - Recall: 0.774 (±0.056)
2025-01-06 14:22:44,451 - INFO - F1: 0.240 (±0.016)
2025-01-06 14:22:44,451 - INFO - 
Entrenando Random Forest...
2025-01-06 14:23:11,423 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:23:11,424 - INFO - ROC AUC: 0.835 (±0.017)
2025-01-06 14:23:11,424 - INFO - Precision: 0.175 (±0.020)
2025-01-06 14:23:11,424 - INFO - Recall: 0.594 (±0.064)
2025-01-06 14:23:11,425 - INFO - F1: 0.270 (±0.029)
2025-01-06 14:23:11,425 - INFO - Random Forest - Resultados:
2025-01-06 14:23:11,425 - INFO - ROC AUC: 0.835 (±0.017)
2025-01-06 14:23:11,425 - INFO - Precision: 0.175 (±0.020)
2025-01-06 14:23:11,425 - INFO - Recall: 0.594 (±0.064)
2025-01-06 14:23:11,425 - INFO - F1: 0.270 (±0.029)
2025-01-06 14:23:11,524 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:23:11,525 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:23:11,525 - INFO - ROC AUC Score: 0.846 (±0.017)
2025-01-06 14:23:11,832 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:23:11,833 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:23:11,859 - INFO - 
Informe de Clasificación:
2025-01-06 14:23:11,864 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.77      0.87       972
           1       0.15      0.80      0.26        50

    accuracy                           0.78      1022
   macro avg       0.57      0.79      0.56      1022
weighted avg       0.95      0.78      0.84      1022

2025-01-06 14:23:11,866 - INFO - 
Matriz de Confusión:
2025-01-06 14:23:11,867 - INFO - 
[[TN=753 FP=219]
2025-01-06 14:23:11,867 - INFO -  [FN=10 TP=40]]
2025-01-06 14:23:11,867 - INFO - 
Métricas Detalladas:
2025-01-06 14:23:11,867 - INFO - Precision: 0.154
2025-01-06 14:23:11,867 - INFO - Recall (Sensibilidad): 0.800
2025-01-06 14:23:11,867 - INFO - Especificidad: 0.775
2025-01-06 14:23:11,868 - INFO - Average Precision Score: 0.243
2025-01-06 14:23:12,138 - INFO - Análisis del modelo completado exitosamente
2025-01-06 14:23:12,143 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 14:23:12,143 - INFO - 
Entrenamiento completado en 0:00:37.785914
2025-01-06 14:27:15,394 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:27:15,412 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:27:15,412 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:27:15,413 - INFO - 
Distribución de clases:
2025-01-06 14:27:15,413 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:27:15,413 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:27:15,413 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:27:15,414 - INFO - 
Valores faltantes por columna:
2025-01-06 14:27:15,415 - INFO - bmi: 201 (3.93%)
2025-01-06 14:27:15,415 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:27:15,415 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:27:15,415 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:27:15,417 - INFO - 
age:
2025-01-06 14:27:15,417 - INFO -   Media: 43.23
2025-01-06 14:27:15,417 - INFO -   Mediana: 45.00
2025-01-06 14:27:15,417 - INFO -   Std: 22.61
2025-01-06 14:27:15,417 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:27:15,418 - INFO - 
avg_glucose_level:
2025-01-06 14:27:15,419 - INFO -   Media: 101.00
2025-01-06 14:27:15,419 - INFO -   Mediana: 91.88
2025-01-06 14:27:15,419 - INFO -   Std: 33.21
2025-01-06 14:27:15,419 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:27:15,420 - INFO - 
bmi:
2025-01-06 14:27:15,420 - INFO -   Media: 28.74
2025-01-06 14:27:15,421 - INFO -   Mediana: 28.10
2025-01-06 14:27:15,421 - INFO -   Std: 7.34
2025-01-06 14:27:15,421 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:27:15,421 - INFO - 
=== Información de Outliers ===
2025-01-06 14:27:15,640 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:27:15,646 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:27:15,669 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:27:15,676 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:27:16,342 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:27:16,343 - INFO - 
Entrenando LDA...
2025-01-06 14:27:23,188 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:27:23,189 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:27:23,189 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:27:23,189 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:27:23,189 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:27:23,190 - INFO - LDA - Resultados:
2025-01-06 14:27:23,190 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:27:23,190 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:27:23,190 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:27:23,190 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:27:23,190 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:27:26,346 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:27:26,347 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:27:26,347 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:27:26,347 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:27:26,348 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:27:26,348 - INFO - Logistic Regression - Resultados:
2025-01-06 14:27:26,348 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:27:26,348 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:27:26,348 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:27:26,348 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:27:26,348 - INFO - 
Entrenando Random Forest...
2025-01-06 14:28:03,988 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:28:03,989 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:28:03,989 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:28:03,989 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:28:03,990 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:28:03,990 - INFO - Random Forest - Resultados:
2025-01-06 14:28:03,990 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:28:03,990 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:28:03,990 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:28:03,990 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:28:04,095 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:28:04,095 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:28:04,095 - INFO - ROC AUC Score: 0.845 (±0.017)
2025-01-06 14:28:04,422 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:28:04,423 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:28:04,451 - INFO - 
Informe de Clasificación:
2025-01-06 14:28:04,456 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.61      0.76       972
           1       0.10      0.84      0.18        50

    accuracy                           0.63      1022
   macro avg       0.54      0.73      0.47      1022
weighted avg       0.94      0.63      0.73      1022

2025-01-06 14:28:04,458 - INFO - 
Matriz de Confusión:
2025-01-06 14:28:04,458 - INFO - 
[[TN=597 FP=375]
2025-01-06 14:28:04,458 - INFO -  [FN=8 TP=42]]
2025-01-06 14:28:04,459 - INFO - 
Métricas Detalladas:
2025-01-06 14:28:04,459 - INFO - Precision: 0.101
2025-01-06 14:28:04,459 - INFO - Recall (Sensibilidad): 0.840
2025-01-06 14:28:04,459 - INFO - Especificidad: 0.614
2025-01-06 14:28:04,460 - INFO - Average Precision Score: 0.229
2025-01-06 14:28:04,732 - INFO - Análisis del modelo completado exitosamente
2025-01-06 14:28:04,736 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 14:28:04,736 - INFO - 
Entrenamiento completado en 0:00:49.342020
2025-01-06 14:30:34,749 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:30:34,765 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:30:34,765 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:30:34,765 - INFO - 
Distribución de clases:
2025-01-06 14:30:34,766 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:30:34,766 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:30:34,766 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:30:34,767 - INFO - 
Valores faltantes por columna:
2025-01-06 14:30:34,767 - INFO - bmi: 201 (3.93%)
2025-01-06 14:30:34,768 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:30:34,768 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:30:34,768 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:30:34,769 - INFO - 
age:
2025-01-06 14:30:34,769 - INFO -   Media: 43.23
2025-01-06 14:30:34,769 - INFO -   Mediana: 45.00
2025-01-06 14:30:34,769 - INFO -   Std: 22.61
2025-01-06 14:30:34,769 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:30:34,771 - INFO - 
avg_glucose_level:
2025-01-06 14:30:34,771 - INFO -   Media: 101.00
2025-01-06 14:30:34,771 - INFO -   Mediana: 91.88
2025-01-06 14:30:34,771 - INFO -   Std: 33.21
2025-01-06 14:30:34,771 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:30:34,773 - INFO - 
bmi:
2025-01-06 14:30:34,773 - INFO -   Media: 28.74
2025-01-06 14:30:34,773 - INFO -   Mediana: 28.10
2025-01-06 14:30:34,773 - INFO -   Std: 7.34
2025-01-06 14:30:34,773 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:30:34,773 - INFO - 
=== Información de Outliers ===
2025-01-06 14:30:34,984 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:30:34,990 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:30:35,010 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:30:35,016 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:30:35,715 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:30:35,715 - INFO - 
Entrenando LDA...
2025-01-06 14:31:26,752 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:31:26,768 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:31:26,768 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:31:26,769 - INFO - 
Distribución de clases:
2025-01-06 14:31:26,769 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:31:26,769 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:31:26,769 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:31:26,771 - INFO - 
Valores faltantes por columna:
2025-01-06 14:31:26,772 - INFO - bmi: 201 (3.93%)
2025-01-06 14:31:26,772 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:31:26,772 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:31:26,772 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:31:26,773 - INFO - 
age:
2025-01-06 14:31:26,773 - INFO -   Media: 43.23
2025-01-06 14:31:26,773 - INFO -   Mediana: 45.00
2025-01-06 14:31:26,773 - INFO -   Std: 22.61
2025-01-06 14:31:26,774 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:31:26,775 - INFO - 
avg_glucose_level:
2025-01-06 14:31:26,775 - INFO -   Media: 101.00
2025-01-06 14:31:26,775 - INFO -   Mediana: 91.88
2025-01-06 14:31:26,775 - INFO -   Std: 33.21
2025-01-06 14:31:26,776 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:31:26,777 - INFO - 
bmi:
2025-01-06 14:31:26,777 - INFO -   Media: 28.74
2025-01-06 14:31:26,777 - INFO -   Mediana: 28.10
2025-01-06 14:31:26,777 - INFO -   Std: 7.34
2025-01-06 14:31:26,777 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:31:26,778 - INFO - 
=== Información de Outliers ===
2025-01-06 14:31:26,990 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:31:26,996 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:31:27,016 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:31:27,022 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:31:27,698 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:31:27,698 - INFO - 
Entrenando LDA...
2025-01-06 14:31:34,525 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:31:34,526 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:31:34,526 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:31:34,526 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:31:34,527 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:31:34,527 - INFO - LDA - Resultados:
2025-01-06 14:31:34,527 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:31:34,527 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:31:34,528 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:31:34,528 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:31:34,528 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:31:38,147 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:31:38,147 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:31:38,147 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:31:38,147 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:31:38,148 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:31:38,148 - INFO - Logistic Regression - Resultados:
2025-01-06 14:31:38,148 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:31:38,148 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:31:38,148 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:31:38,148 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:31:38,149 - INFO - 
Entrenando Random Forest...
2025-01-06 14:32:20,622 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:32:20,623 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:32:20,623 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:32:20,623 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:32:20,623 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:32:20,624 - INFO - Random Forest - Resultados:
2025-01-06 14:32:20,624 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:32:20,624 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:32:20,624 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:32:20,624 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:32:20,730 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:32:20,730 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:32:20,731 - INFO - ROC AUC Score: 0.845 (±0.017)
2025-01-06 14:32:21,082 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:32:21,082 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:32:21,110 - INFO - 
Informe de Clasificación:
2025-01-06 14:32:21,115 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.61      0.76       972
           1       0.10      0.84      0.18        50

    accuracy                           0.63      1022
   macro avg       0.54      0.73      0.47      1022
weighted avg       0.94      0.63      0.73      1022

2025-01-06 14:32:21,117 - INFO - 
Matriz de Confusión:
2025-01-06 14:32:21,117 - INFO - 
[[TN=597 FP=375]
2025-01-06 14:32:21,117 - INFO -  [FN=8 TP=42]]
2025-01-06 14:32:21,117 - INFO - 
Métricas Detalladas:
2025-01-06 14:32:21,117 - INFO - Precision: 0.101
2025-01-06 14:32:21,118 - INFO - Recall (Sensibilidad): 0.840
2025-01-06 14:32:21,118 - INFO - Especificidad: 0.614
2025-01-06 14:32:21,119 - INFO - Average Precision Score: 0.229
2025-01-06 14:32:21,387 - INFO - Análisis del modelo completado exitosamente
2025-01-06 14:32:21,392 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 14:32:21,392 - INFO - 
Entrenamiento completado en 0:00:54.640035
2025-01-06 14:32:33,317 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:32:33,332 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:32:33,332 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:32:33,333 - INFO - 
Distribución de clases:
2025-01-06 14:32:33,333 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:32:33,333 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:32:33,333 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:32:33,334 - INFO - 
Valores faltantes por columna:
2025-01-06 14:32:33,335 - INFO - bmi: 201 (3.93%)
2025-01-06 14:32:33,335 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:32:33,335 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:32:33,335 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:32:33,336 - INFO - 
age:
2025-01-06 14:32:33,336 - INFO -   Media: 43.23
2025-01-06 14:32:33,336 - INFO -   Mediana: 45.00
2025-01-06 14:32:33,336 - INFO -   Std: 22.61
2025-01-06 14:32:33,337 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:32:33,338 - INFO - 
avg_glucose_level:
2025-01-06 14:32:33,338 - INFO -   Media: 101.00
2025-01-06 14:32:33,338 - INFO -   Mediana: 91.88
2025-01-06 14:32:33,338 - INFO -   Std: 33.21
2025-01-06 14:32:33,338 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:32:33,339 - INFO - 
bmi:
2025-01-06 14:32:33,340 - INFO -   Media: 28.74
2025-01-06 14:32:33,340 - INFO -   Mediana: 28.10
2025-01-06 14:32:33,340 - INFO -   Std: 7.34
2025-01-06 14:32:33,340 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:32:33,340 - INFO - 
=== Información de Outliers ===
2025-01-06 14:32:33,548 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:32:33,553 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:32:33,573 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:32:33,578 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:32:34,270 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:32:34,270 - INFO - 
Entrenando LDA...
2025-01-06 14:32:38,122 - ERROR - Error evaluando LDA: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
12 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Male'

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Female'

2025-01-06 14:32:38,129 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:32:39,664 - ERROR - Error evaluando Logistic Regression: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
12 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Male'

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Female'

2025-01-06 14:32:39,669 - INFO - 
Entrenando Random Forest...
2025-01-06 14:32:40,077 - ERROR - Error evaluando Random Forest: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
12 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Male'

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Female'

2025-01-06 14:32:40,282 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:32:40,283 - ERROR - Error durante el entrenamiento: No hay resultados de modelos para comparar
2025-01-06 14:33:07,367 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:33:07,383 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:33:07,383 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:33:07,384 - INFO - 
Distribución de clases:
2025-01-06 14:33:07,384 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:33:07,384 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:33:07,384 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:33:07,385 - INFO - 
Valores faltantes por columna:
2025-01-06 14:33:07,385 - INFO - bmi: 201 (3.93%)
2025-01-06 14:33:07,385 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:33:07,386 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:33:07,386 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:33:07,387 - INFO - 
age:
2025-01-06 14:33:07,387 - INFO -   Media: 43.23
2025-01-06 14:33:07,387 - INFO -   Mediana: 45.00
2025-01-06 14:33:07,387 - INFO -   Std: 22.61
2025-01-06 14:33:07,387 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:33:07,389 - INFO - 
avg_glucose_level:
2025-01-06 14:33:07,389 - INFO -   Media: 101.00
2025-01-06 14:33:07,389 - INFO -   Mediana: 91.88
2025-01-06 14:33:07,389 - INFO -   Std: 33.21
2025-01-06 14:33:07,389 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:33:07,390 - INFO - 
bmi:
2025-01-06 14:33:07,390 - INFO -   Media: 28.74
2025-01-06 14:33:07,390 - INFO -   Mediana: 28.10
2025-01-06 14:33:07,391 - INFO -   Std: 7.34
2025-01-06 14:33:07,391 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:33:07,391 - INFO - 
=== Información de Outliers ===
2025-01-06 14:33:07,607 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:33:07,612 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:33:07,632 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:33:07,638 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:33:08,289 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:33:08,289 - INFO - 
Entrenando LDA...
2025-01-06 14:33:12,306 - ERROR - Error evaluando LDA: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
12 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Male'

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Female'

2025-01-06 14:33:12,311 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:33:13,703 - ERROR - Error evaluando Logistic Regression: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
12 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Male'

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Female'

2025-01-06 14:33:13,708 - INFO - 
Entrenando Random Forest...
2025-01-06 14:33:14,078 - ERROR - Error evaluando Random Forest: 
All the 15 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
12 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Male'

--------------------------------------------------------------------------------
3 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\model_selection\_validation.py", line 866, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 518, in fit
    Xt, yt = self._fit(X, y, routed_params, raw_params=params)
             ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 440, in _fit
    X, y, fitted_transformer = fit_resample_one_cached(
                               ~~~~~~~~~~~~~~~~~~~~~~~^
        cloned_transformer,
        ^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        params=routed_params[name],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\joblib\memory.py", line 312, in __call__
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\pipeline.py", line 1336, in _fit_resample_one
    X_res, y_res = sampler.fit_resample(X, y, **params.get("fit_resample", {}))
                   ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 202, in fit_resample
    return super().fit_resample(X, y, **params)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 99, in fit_resample
    X, y, binarize_y = self._check_X_y(X, y)
                       ~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\imblearn\base.py", line 157, in _check_X_y
    X, y = validate_data(self, X=X, y=y, reset=True, accept_sparse=accept_sparse)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1370, in check_X_y
    X = check_array(
        X,
    ...<12 lines>...
        input_name="X",
    )
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\validation.py", line 1055, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
  File "C:\Users\ivang\Documents\ML Projects\Stroke Prediction Web\.venv\Lib\site-packages\sklearn\utils\_array_api.py", line 832, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
ValueError: could not convert string to float: 'Female'

2025-01-06 14:33:14,207 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:33:14,208 - ERROR - Error durante el entrenamiento: No hay resultados de modelos para comparar
2025-01-06 14:34:29,897 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:34:29,914 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:34:29,914 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:34:29,914 - INFO - 
Distribución de clases:
2025-01-06 14:34:29,915 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:34:29,915 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:34:29,915 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:34:29,916 - INFO - 
Valores faltantes por columna:
2025-01-06 14:34:29,917 - INFO - bmi: 201 (3.93%)
2025-01-06 14:34:29,917 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:34:29,917 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:34:29,917 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:34:29,918 - INFO - 
age:
2025-01-06 14:34:29,918 - INFO -   Media: 43.23
2025-01-06 14:34:29,918 - INFO -   Mediana: 45.00
2025-01-06 14:34:29,918 - INFO -   Std: 22.61
2025-01-06 14:34:29,918 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:34:29,920 - INFO - 
avg_glucose_level:
2025-01-06 14:34:29,920 - INFO -   Media: 101.00
2025-01-06 14:34:29,920 - INFO -   Mediana: 91.88
2025-01-06 14:34:29,920 - INFO -   Std: 33.21
2025-01-06 14:34:29,920 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:34:29,921 - INFO - 
bmi:
2025-01-06 14:34:29,922 - INFO -   Media: 28.74
2025-01-06 14:34:29,922 - INFO -   Mediana: 28.10
2025-01-06 14:34:29,922 - INFO -   Std: 7.34
2025-01-06 14:34:29,922 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:34:29,922 - INFO - 
=== Información de Outliers ===
2025-01-06 14:34:30,128 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:34:30,133 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:34:30,153 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:34:30,158 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:34:30,809 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:34:30,809 - INFO - 
Entrenando LDA...
2025-01-06 14:34:37,945 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:34:37,945 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:34:37,945 - INFO - Precision: nan (±nan)
2025-01-06 14:34:37,946 - INFO - Recall: nan (±nan)
2025-01-06 14:34:37,946 - INFO - F1: nan (±nan)
2025-01-06 14:34:37,946 - INFO - LDA - Resultados:
2025-01-06 14:34:37,946 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:34:37,946 - INFO - Precision: nan (±nan)
2025-01-06 14:34:37,946 - INFO - Recall: nan (±nan)
2025-01-06 14:34:37,947 - INFO - F1: nan (±nan)
2025-01-06 14:34:37,947 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:34:41,425 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:34:41,425 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:34:41,425 - INFO - Precision: nan (±nan)
2025-01-06 14:34:41,426 - INFO - Recall: nan (±nan)
2025-01-06 14:34:41,426 - INFO - F1: nan (±nan)
2025-01-06 14:34:41,426 - INFO - Logistic Regression - Resultados:
2025-01-06 14:34:41,426 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:34:41,426 - INFO - Precision: nan (±nan)
2025-01-06 14:34:41,426 - INFO - Recall: nan (±nan)
2025-01-06 14:34:41,427 - INFO - F1: nan (±nan)
2025-01-06 14:34:41,427 - INFO - 
Entrenando Random Forest...
2025-01-06 14:35:46,682 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:35:46,697 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:35:46,697 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:35:46,698 - INFO - 
Distribución de clases:
2025-01-06 14:35:46,698 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:35:46,698 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:35:46,698 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:35:46,699 - INFO - 
Valores faltantes por columna:
2025-01-06 14:35:46,700 - INFO - bmi: 201 (3.93%)
2025-01-06 14:35:46,700 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:35:46,700 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:35:46,700 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:35:46,701 - INFO - 
age:
2025-01-06 14:35:46,701 - INFO -   Media: 43.23
2025-01-06 14:35:46,701 - INFO -   Mediana: 45.00
2025-01-06 14:35:46,701 - INFO -   Std: 22.61
2025-01-06 14:35:46,702 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:35:46,703 - INFO - 
avg_glucose_level:
2025-01-06 14:35:46,703 - INFO -   Media: 101.00
2025-01-06 14:35:46,703 - INFO -   Mediana: 91.88
2025-01-06 14:35:46,703 - INFO -   Std: 33.21
2025-01-06 14:35:46,704 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:35:46,705 - INFO - 
bmi:
2025-01-06 14:35:46,705 - INFO -   Media: 28.74
2025-01-06 14:35:46,705 - INFO -   Mediana: 28.10
2025-01-06 14:35:46,705 - INFO -   Std: 7.34
2025-01-06 14:35:46,705 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:35:46,705 - INFO - 
=== Información de Outliers ===
2025-01-06 14:35:46,908 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:35:46,914 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:35:46,934 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:35:46,940 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:35:47,569 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:35:47,569 - INFO - 
Entrenando LDA...
2025-01-06 14:35:54,096 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:35:54,097 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:35:54,098 - INFO - Precision: nan (±nan)
2025-01-06 14:35:54,098 - INFO - Recall: nan (±nan)
2025-01-06 14:35:54,099 - INFO - F1: nan (±nan)
2025-01-06 14:35:54,099 - INFO - LDA - Resultados:
2025-01-06 14:35:54,099 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:35:54,100 - INFO - Precision: nan (±nan)
2025-01-06 14:35:54,100 - INFO - Recall: nan (±nan)
2025-01-06 14:35:54,100 - INFO - F1: nan (±nan)
2025-01-06 14:35:54,100 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:35:57,286 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:35:57,287 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:35:57,287 - INFO - Precision: nan (±nan)
2025-01-06 14:35:57,287 - INFO - Recall: nan (±nan)
2025-01-06 14:35:57,288 - INFO - F1: nan (±nan)
2025-01-06 14:35:57,288 - INFO - Logistic Regression - Resultados:
2025-01-06 14:35:57,288 - INFO - ROC AUC: nan (±nan)
2025-01-06 14:35:57,288 - INFO - Precision: nan (±nan)
2025-01-06 14:35:57,288 - INFO - Recall: nan (±nan)
2025-01-06 14:35:57,288 - INFO - F1: nan (±nan)
2025-01-06 14:35:57,289 - INFO - 
Entrenando Random Forest...
2025-01-06 14:37:36,961 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:37:36,976 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:37:36,976 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:37:36,977 - INFO - 
Distribución de clases:
2025-01-06 14:37:36,977 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:37:36,977 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:37:36,978 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:37:36,979 - INFO - 
Valores faltantes por columna:
2025-01-06 14:37:36,979 - INFO - bmi: 201 (3.93%)
2025-01-06 14:37:36,979 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:37:36,980 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:37:36,980 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:37:36,981 - INFO - 
age:
2025-01-06 14:37:36,981 - INFO -   Media: 43.23
2025-01-06 14:37:36,982 - INFO -   Mediana: 45.00
2025-01-06 14:37:36,982 - INFO -   Std: 22.61
2025-01-06 14:37:36,982 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:37:36,983 - INFO - 
avg_glucose_level:
2025-01-06 14:37:36,983 - INFO -   Media: 101.00
2025-01-06 14:37:36,984 - INFO -   Mediana: 91.88
2025-01-06 14:37:36,984 - INFO -   Std: 33.21
2025-01-06 14:37:36,984 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:37:36,985 - INFO - 
bmi:
2025-01-06 14:37:36,985 - INFO -   Media: 28.74
2025-01-06 14:37:36,985 - INFO -   Mediana: 28.10
2025-01-06 14:37:36,985 - INFO -   Std: 7.34
2025-01-06 14:37:36,986 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:37:36,986 - INFO - 
=== Información de Outliers ===
2025-01-06 14:37:37,180 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:37:37,186 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:37:37,205 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:37:37,211 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:37:37,834 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:37:37,834 - INFO - 
Entrenando LDA...
2025-01-06 14:37:37,837 - ERROR - Error durante el entrenamiento: Cannot setitem on a Categorical with a new category (missing), set the categories first
2025-01-06 14:38:52,065 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:38:52,081 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:38:52,081 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:38:52,081 - INFO - 
Distribución de clases:
2025-01-06 14:38:52,081 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:38:52,082 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:38:52,082 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:38:52,083 - INFO - 
Valores faltantes por columna:
2025-01-06 14:38:52,084 - INFO - bmi: 201 (3.93%)
2025-01-06 14:38:52,084 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:38:52,084 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:38:52,084 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:38:52,085 - INFO - 
age:
2025-01-06 14:38:52,086 - INFO -   Media: 43.23
2025-01-06 14:38:52,086 - INFO -   Mediana: 45.00
2025-01-06 14:38:52,086 - INFO -   Std: 22.61
2025-01-06 14:38:52,086 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:38:52,087 - INFO - 
avg_glucose_level:
2025-01-06 14:38:52,088 - INFO -   Media: 101.00
2025-01-06 14:38:52,088 - INFO -   Mediana: 91.88
2025-01-06 14:38:52,088 - INFO -   Std: 33.21
2025-01-06 14:38:52,088 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:38:52,089 - INFO - 
bmi:
2025-01-06 14:38:52,089 - INFO -   Media: 28.74
2025-01-06 14:38:52,089 - INFO -   Mediana: 28.10
2025-01-06 14:38:52,090 - INFO -   Std: 7.34
2025-01-06 14:38:52,090 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:38:52,090 - INFO - 
=== Información de Outliers ===
2025-01-06 14:38:52,293 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:38:52,298 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:38:52,318 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:38:52,323 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:38:52,998 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:38:53,007 - INFO - 
Entrenando LDA...
2025-01-06 14:39:00,155 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:39:00,156 - INFO - ROC AUC: 0.839 (±0.016)
2025-01-06 14:39:00,156 - INFO - Precision: 0.097 (±0.005)
2025-01-06 14:39:00,156 - INFO - Recall: 0.930 (±0.032)
2025-01-06 14:39:00,156 - INFO - F1: 0.176 (±0.009)
2025-01-06 14:39:00,157 - INFO - LDA - Resultados:
2025-01-06 14:39:00,157 - INFO - ROC AUC: 0.839 (±0.016)
2025-01-06 14:39:00,157 - INFO - Precision: 0.097 (±0.005)
2025-01-06 14:39:00,157 - INFO - Recall: 0.930 (±0.032)
2025-01-06 14:39:00,157 - INFO - F1: 0.176 (±0.009)
2025-01-06 14:39:00,157 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:39:03,621 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:39:03,622 - INFO - ROC AUC: 0.843 (±0.016)
2025-01-06 14:39:03,622 - INFO - Precision: 0.114 (±0.005)
2025-01-06 14:39:03,622 - INFO - Recall: 0.879 (±0.043)
2025-01-06 14:39:03,622 - INFO - F1: 0.201 (±0.008)
2025-01-06 14:39:03,623 - INFO - Logistic Regression - Resultados:
2025-01-06 14:39:03,623 - INFO - ROC AUC: 0.843 (±0.016)
2025-01-06 14:39:03,623 - INFO - Precision: 0.114 (±0.005)
2025-01-06 14:39:03,623 - INFO - Recall: 0.879 (±0.043)
2025-01-06 14:39:03,623 - INFO - F1: 0.201 (±0.008)
2025-01-06 14:39:03,623 - INFO - 
Entrenando Random Forest...
2025-01-06 14:40:07,814 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:40:07,838 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:40:07,838 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:40:07,839 - INFO - 
Distribución de clases:
2025-01-06 14:40:07,839 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:40:07,839 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:40:07,839 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:40:07,841 - INFO - 
Valores faltantes por columna:
2025-01-06 14:40:07,842 - INFO - bmi: 201 (3.93%)
2025-01-06 14:40:07,842 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:40:07,842 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:40:07,842 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:40:07,844 - INFO - 
age:
2025-01-06 14:40:07,844 - INFO -   Media: 43.23
2025-01-06 14:40:07,844 - INFO -   Mediana: 45.00
2025-01-06 14:40:07,844 - INFO -   Std: 22.61
2025-01-06 14:40:07,845 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:40:07,847 - INFO - 
avg_glucose_level:
2025-01-06 14:40:07,847 - INFO -   Media: 101.00
2025-01-06 14:40:07,848 - INFO -   Mediana: 91.88
2025-01-06 14:40:07,848 - INFO -   Std: 33.21
2025-01-06 14:40:07,848 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:40:07,850 - INFO - 
bmi:
2025-01-06 14:40:07,851 - INFO -   Media: 28.74
2025-01-06 14:40:07,851 - INFO -   Mediana: 28.10
2025-01-06 14:40:07,851 - INFO -   Std: 7.34
2025-01-06 14:40:07,851 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:40:07,851 - INFO - 
=== Información de Outliers ===
2025-01-06 14:40:08,094 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:40:08,100 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:40:08,122 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:40:08,128 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:40:08,870 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:40:08,871 - INFO - 
Entrenando LDA...
2025-01-06 14:40:16,239 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:40:16,239 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:40:16,239 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:40:16,240 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:40:16,240 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:40:16,240 - INFO - LDA - Resultados:
2025-01-06 14:40:16,240 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:40:16,240 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:40:16,240 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:40:16,241 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:40:16,241 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:40:19,453 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:40:19,453 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:40:19,453 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:40:19,453 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:40:19,454 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:40:19,454 - INFO - Logistic Regression - Resultados:
2025-01-06 14:40:19,454 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:40:19,454 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:40:19,454 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:40:19,454 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:40:19,454 - INFO - 
Entrenando Random Forest...
2025-01-06 14:41:00,046 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:41:00,047 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:41:00,047 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:41:00,047 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:41:00,047 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:41:00,048 - INFO - Random Forest - Resultados:
2025-01-06 14:41:00,048 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:41:00,048 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:41:00,048 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:41:00,048 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:41:00,158 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:41:00,158 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:41:00,159 - INFO - ROC AUC Score: 0.845 (±0.017)
2025-01-06 14:41:00,504 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:41:00,505 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:41:00,537 - INFO - 
Informe de Clasificación:
2025-01-06 14:41:00,542 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.61      0.76       972
           1       0.10      0.84      0.18        50

    accuracy                           0.63      1022
   macro avg       0.54      0.73      0.47      1022
weighted avg       0.94      0.63      0.73      1022

2025-01-06 14:41:00,543 - INFO - 
Matriz de Confusión:
2025-01-06 14:41:00,543 - INFO - 
[[TN=597 FP=375]
2025-01-06 14:41:00,544 - INFO -  [FN=8 TP=42]]
2025-01-06 14:41:00,544 - INFO - 
Métricas Detalladas:
2025-01-06 14:41:00,544 - INFO - Precision: 0.101
2025-01-06 14:41:00,544 - INFO - Recall (Sensibilidad): 0.840
2025-01-06 14:41:00,544 - INFO - Especificidad: 0.614
2025-01-06 14:41:00,545 - INFO - Average Precision Score: 0.229
2025-01-06 14:41:00,822 - INFO - Análisis del modelo completado exitosamente
2025-01-06 14:41:00,826 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 14:41:00,827 - INFO - 
Entrenamiento completado en 0:00:53.011771
2025-01-06 14:43:04,321 - INFO - Iniciando entrenamiento del modelo
2025-01-06 14:43:04,337 - INFO - Dataset cargado: (5110, 19)
2025-01-06 14:43:04,338 - INFO - 
=== Estadísticas del Dataset ===
2025-01-06 14:43:04,338 - INFO - 
Distribución de clases:
2025-01-06 14:43:04,339 - INFO - No Stroke: 4861 (95.13%)
2025-01-06 14:43:04,339 - INFO - Stroke: 249 (4.87%)
2025-01-06 14:43:04,339 - INFO - Ratio de desbalanceo: 1:19.52
2025-01-06 14:43:04,340 - INFO - 
Valores faltantes por columna:
2025-01-06 14:43:04,340 - INFO - bmi: 201 (3.93%)
2025-01-06 14:43:04,341 - INFO - log_bmi: 201 (3.93%)
2025-01-06 14:43:04,341 - INFO - bmi_category: 201 (3.93%)
2025-01-06 14:43:04,341 - INFO - 
Estadísticas de variables numéricas:
2025-01-06 14:43:04,342 - INFO - 
age:
2025-01-06 14:43:04,342 - INFO -   Media: 43.23
2025-01-06 14:43:04,342 - INFO -   Mediana: 45.00
2025-01-06 14:43:04,342 - INFO -   Std: 22.61
2025-01-06 14:43:04,343 - INFO -   Rango: [0.08 - 82.00]
2025-01-06 14:43:04,344 - INFO - 
avg_glucose_level:
2025-01-06 14:43:04,344 - INFO -   Media: 101.00
2025-01-06 14:43:04,344 - INFO -   Mediana: 91.88
2025-01-06 14:43:04,345 - INFO -   Std: 33.21
2025-01-06 14:43:04,345 - INFO -   Rango: [55.12 - 169.36]
2025-01-06 14:43:04,346 - INFO - 
bmi:
2025-01-06 14:43:04,346 - INFO -   Media: 28.74
2025-01-06 14:43:04,346 - INFO -   Mediana: 28.10
2025-01-06 14:43:04,347 - INFO -   Std: 7.34
2025-01-06 14:43:04,347 - INFO -   Rango: [10.30 - 47.50]
2025-01-06 14:43:04,347 - INFO - 
=== Información de Outliers ===
2025-01-06 14:43:04,562 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:43:04,567 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:43:04,587 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:43:04,593 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-01-06 14:43:05,249 - INFO - Visualizaciones EDA completadas exitosamente
2025-01-06 14:43:05,250 - INFO - 
Entrenando LDA...
2025-01-06 14:43:12,129 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:43:12,130 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:43:12,130 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:43:12,130 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:43:12,130 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:43:12,131 - INFO - LDA - Resultados:
2025-01-06 14:43:12,131 - INFO - ROC AUC: 0.844 (±0.017)
2025-01-06 14:43:12,131 - INFO - Precision: 0.099 (±0.004)
2025-01-06 14:43:12,131 - INFO - Recall: 0.928 (±0.031)
2025-01-06 14:43:12,131 - INFO - F1: 0.180 (±0.006)
2025-01-06 14:43:12,131 - INFO - 
Entrenando Logistic Regression...
2025-01-06 14:43:15,403 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:43:15,403 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:43:15,403 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:43:15,403 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:43:15,404 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:43:15,404 - INFO - Logistic Regression - Resultados:
2025-01-06 14:43:15,404 - INFO - ROC AUC: 0.845 (±0.017)
2025-01-06 14:43:15,404 - INFO - Precision: 0.106 (±0.003)
2025-01-06 14:43:15,404 - INFO - Recall: 0.896 (±0.038)
2025-01-06 14:43:15,405 - INFO - F1: 0.189 (±0.005)
2025-01-06 14:43:15,405 - INFO - 
Entrenando Random Forest...
2025-01-06 14:43:53,851 - INFO - 
Métricas de validación cruzada:
2025-01-06 14:43:53,852 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:43:53,852 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:43:53,852 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:43:53,853 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:43:53,853 - INFO - Random Forest - Resultados:
2025-01-06 14:43:53,853 - INFO - ROC AUC: 0.828 (±0.016)
2025-01-06 14:43:53,853 - INFO - Precision: 0.138 (±0.009)
2025-01-06 14:43:53,853 - INFO - Recall: 0.730 (±0.062)
2025-01-06 14:43:53,853 - INFO - F1: 0.232 (±0.014)
2025-01-06 14:43:53,958 - INFO - Comparación de modelos guardada exitosamente
2025-01-06 14:43:53,958 - INFO - 
Mejor modelo: Logistic Regression
2025-01-06 14:43:53,958 - INFO - ROC AUC Score: 0.845 (±0.017)
2025-01-06 14:43:54,316 - WARNING - Desajuste en características: 0 nombres vs 34 importancias
2025-01-06 14:43:54,316 - INFO - 
=== Análisis Detallado del Modelo ===
2025-01-06 14:43:54,348 - INFO - 
Informe de Clasificación:
2025-01-06 14:43:54,353 - INFO - 
              precision    recall  f1-score   support

           0       0.99      0.61      0.76       972
           1       0.10      0.84      0.18        50

    accuracy                           0.63      1022
   macro avg       0.54      0.73      0.47      1022
weighted avg       0.94      0.63      0.73      1022

2025-01-06 14:43:54,355 - INFO - 
Matriz de Confusión:
2025-01-06 14:43:54,355 - INFO - 
[[TN=597 FP=375]
2025-01-06 14:43:54,356 - INFO -  [FN=8 TP=42]]
2025-01-06 14:43:54,356 - INFO - 
Métricas Detalladas:
2025-01-06 14:43:54,356 - INFO - Precision: 0.101
2025-01-06 14:43:54,356 - INFO - Recall (Sensibilidad): 0.840
2025-01-06 14:43:54,356 - INFO - Especificidad: 0.614
2025-01-06 14:43:54,357 - INFO - Average Precision Score: 0.229
2025-01-06 14:43:54,641 - INFO - Análisis del modelo completado exitosamente
2025-01-06 14:43:54,646 - INFO - Modelo y métricas guardados exitosamente
2025-01-06 14:43:54,646 - INFO - 
Entrenamiento completado en 0:00:50.324685
